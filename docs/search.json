[
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "Blog",
    "section": "",
    "text": "R ve Kuşlar - Ebird Verilerinin R ile Analizi I\n\n\n\n\n\n\n\n\n\n\n\n\nMehmet Göktuğ Öztürk\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Hakkımda",
    "section": "",
    "text": "Merhaba ben Mehmet Göktuğ Öztürk. Kendimi bildim bileli doğayı ve onu şekillendiren dinamikleri gözlemlemeye karşı büyük bir ilgiye sahibim. Doğup, büyüdüğüm evin dışarıdan izole bahçesiyle başlayan doğayla temasım, büyükbabamla gezdiğim Orta Karadeniz meşelikleri ve dedemden dinlediğim yaban hayatı hikâyeleriyle perçinlendi. Bu sayede yolumun düştüğü Hacettepe Üniversitesi Biyoloji Bölümü’nden 2021 yılında mezun oldum. Hacettepe Üniversitesi Fen Bilimleri Enstitüsü Ekoloji Anabilim Dalı’nda, Çağatay Tavşanoğlu danışmanlığında yüksek lisans çalışmamı yürütüyorum. Yüksek lisans çalışmam, yıldırım kökenli orman yangınlarının mekân-zamansal örüntüleri üzerine. Lisans eğitimim boyunca yangın ekolojisi, fonksiyonel bitki karakterleri, göçebe hayvancılık, yırtıcı kuş göçü, üreyen kuşlar ve büyük memeliler üzerine çeşitli projeler kapsamında İç Anadolu, Karadeniz, Akdeniz ve Ege Bölgesi’nde arazi çalışmalarına katıldım. Ekoloji, yaban hayatı, doğa koruma, klimatoloji, meteoroloji, uzamsal veri analizi ve R programlama konularına büyük ilgi duymaktayım. Ayrıca 2011 yılından beri müdavimi olduğum havadelisi.com’un editörlüğünü yapmaktayım.\nBir blog yazma fikri ilk olarak, anadilde bilim anlatıcılığı ve blog kültürü konusunda çok şey öğrendiğim Ozan Mert Göktürk ve meşhur blogu havadelisi ile tanıştığım vakit ortaya çıktı. Yıllar içinde gelişen ilgi alanlarım ve doğayı daha yakından tanıma çabamla beraber bu blogun R ile ilgili olması gerektiğine karar verdim. R, sıkıcı bir anlatımla, veri analizi ve istatistik konularında açık ve tekrarlanabilir bir ortam sağlayan bir programlama dili. Ancak merakınızı cezbedecek bir şeyler söyleyecek olursam, ilgi duyduğunuz alanda bilgiye ulaşmanız ve yeni bilgiler üretmeniz için işinizi çokça kolaylaştıran bir araç. R ile ekoloji, biyoinformatik ve coğrafi bilgi sistemleri (CBS) analizleri yapabilir; uydu görüntülerini işleyebilir; istatistik ve yapay zeka modelleri çalıştırabilir; birbirinden güzel grafikler, haritalar çizebilir; makale, blog ve kitap dahi yazabilirsiniz. Açık kaynaklı olması sebebiyle farklı alanlardan, özellikle de bilim çevrelerinden, binlerce geliştirici sürekli olarak yeni R paketleri geliştirmektedir. 17.04.2023 tarihi itibariyle 19 binden fazla R paketi mevcutmuş.\nBu blogda daha çok R ile ekoloji, biyocoğrafya, iklimbilim konularındaki verilerle ilgilenecek, veri manipülasyonu, analizler, görselleştirmeler yapacağız. Özellikle de mekânsal analizler üzerine yoğunlaşacağımızı düşünüyorum. R’ın yanı sıra Python, Bash gibi dillerle de çeşitli içerikler oluşturacağız. Bol tartışmalı, hep birlikte öğreneceğimiz içeriklere…\nBilimle ve huzurla kalınız."
  },
  {
    "objectID": "posts/ebird_R/ebird_r.html",
    "href": "posts/ebird_R/ebird_r.html",
    "title": "R ve Kuşlar - Ebird Verilerinin R ile Analizi I",
    "section": "",
    "text": "Merhabalar, blogun ilk yazısına hoş geldiniz. Temel bilgiler içeren yazılar da olacak ancak blog içeriklerinin çoğunun bu gibi vaka örneklerinden oluşacağını düşünüyorum. Takıldığınız ve anlamadığınız yerler olursa lütfen yorum yapmaya çekinmeyiniz. Ayrıca katkılarınızı ve eleştirilerinizi de bekliyorum. Keyifli okumalar.\nBu blog yazısında, özetle, R’da kuş verilerini nasıl işleyeceğimize değineceğim. Kuşlara doğrudan ilginiz olmasa dahi, temel bazı mekânsal analizleri öğrenmek için faydalı bir yazı olacak.\nBurada iki temel sorumuz var:\n\nTürkiye’de, illere göre toplam kuş türü sayısı nasıl bir dağılım gösteriyor?\nBilindiği gibi Kızılcahamam, Türkiye’deki en önemli kara akbaba - Aegypius monachus popülasyonlarından birisini barındırıyor. Bu türün, Kızılcahamam ilçe sınırları içerisinde nasıl bir dağılımı vardır? Türün dağılımıyla çevresel faktörler arasındaki ilişki kabaca nasıldır?\n\nBu yazıda yalnızca birinci soruya odaklanacağız. İkinci soru için ikinci yazıyı bekleyiniz lütfen. :)\n\n\nYazının Akışı\nYazının genel akışı aşağıdaki gibidir:\n\nGerekli paketlerin yüklenmesi\nKuş verisinin yüklenip bu yazı için gerekli olan alt kümesinin alınması\nKuş verisinin mekânsallıştırılması\nTR il katmanının yüklenmesi\nKuş verisinin gruplanıp özetlenmesi\nHer bir il sınırı içinde kalan tür sayısının hesaplanması\nVerinin görselleştirilmesi\n\n\n\n1. Gerekli paketlerin yüklenmesi\n\n\n\n\n\n\n\n\n\nPaket\nAçıklama\n\n\n\n\ntidyverse\nÇoğunlukla veri manipülasyonu ve görselleştirme üzerine paketler içeren bir paket koleksiyonu\n\n\nsf\nSimple Features: Mekânsal vektör verileri işlemek için\n\n\nrgeoboundaries\nMülki idare sınırlarını indirmek için\n\n\ntmap\nGüzel haritalar çizmek için\n\n\n\n\n\nEğer bu paketler kurulu değilse aşağıdaki kod bloğu ile kurabilirsiniz. Bu kod bloğu, paketi R’a yüklemeye çalışacak, eğer yükleyemezse kuracaktır. Eğer kurulumda sıkıntı yaşarsanız paketlerin dökümantasyonuna bakabilirsiniz.\n\nif (!require(\"tidyverse\")) install.packages(\"tidyverse\")\nif (!require(\"sf\")) install.packages(\"sf\")\nif (!require(\"rgeoboundaries\")) install.packages(\"rgeoboundaries\")\nif (!require(\"tmap\")) install.packages(\"tmap\")\n\nEğer paketler kuruluysa library() fonksiyonu ile yükleyebiliriz.\n\nlibrary(tidyverse) # bircok veri isini kolaylastirmak icin\nlibrary(sf) # r'da mekansal vektor verileri islemek icin\nlibrary(rgeoboundaries) # tr il sinirlarina erismek icin\nlibrary(tmap) # guzel haritalar cizmek icin \n\n\n\n2. Kuş verisinin yüklenip bu yazı için gerekli olan alt kümesinin alınması\nİlk soruya cevap verebilmek için öncelikle iki temel veriye ihtiyacımız var. Bunlardan birisi kuş, diğeri ise Türkiye’deki iller.\nKuş verisi olarak, Türkiye ve dünyadaki en kapsamlı kuş gözlem veri tabanı olan eBird’ü kullanacağız. Kuş gözlemcileri araziye çıktıklarında gözlemledikleri kuşları bu veri tabanına kaydediyor, bilime ve doğa korumaya katkı sağlayabiliyorlar. 2015 yılında ulusal veri tabanımız Kuşbank’ın eBird’e taşınmasından beri Türkiye kuşlarını konu alan en kapsamlı veri tabanı aynı zamanda.\neBird verilerini siteye üye olup, en altta, Bilim başlığı altındaki Veri indirme talebi sayfasından ya da {rebird} paketini kullanarak indirebilirsiniz. Ben, site üzerinden tüm Türkiye verilerini talep ederek indirdim.\nİndirdiğimiz eBird verilerini R’a yükleyelim. eBird verileri txt dosyası olduğundan {tidyverse} paket evreni içindeki bir fonksiyon olan read_delim()’i kullandık. Base R’daki read.table() fonksiyonu da kullanılabilir. Veri biraz büyük olduğundan yüklenmesi ve işlenmesi yavaş olabilir.\n\nebird <- read_delim(\"./ebird/ebd_TR_relApr-2023.txt\")\n\n\nprint(ebird)\n\n# A tibble: 2,403,720 × 50\n   `GLOBAL UNIQUE IDENTIFIER`     `LAST EDITED DATE`  `TAXONOMIC ORDER` CATEGORY\n   <chr>                          <dttm>                          <dbl> <chr>   \n 1 URN:CornellLabOfOrnithology:E… 2021-04-15 12:59:44             10043 species \n 2 URN:CornellLabOfOrnithology:E… 2021-04-15 12:58:56              5625 species \n 3 URN:CornellLabOfOrnithology:E… 2021-04-15 13:04:32              1361 species \n 4 URN:CornellLabOfOrnithology:E… 2021-04-14 00:03:13             22215 species \n 5 URN:CornellLabOfOrnithology:E… 2021-04-05 11:01:32              5787 species \n 6 URN:CornellLabOfOrnithology:E… 2021-04-21 02:26:13             29239 species \n 7 URN:CornellLabOfOrnithology:E… 2021-04-14 00:03:35             22156 species \n 8 URN:CornellLabOfOrnithology:E… 2021-04-05 11:01:32               291 species \n 9 URN:CornellLabOfOrnithology:E… 2018-09-20 02:46:53              5945 species \n10 URN:CornellLabOfOrnithology:E… 2018-09-20 02:46:53              5945 species \n# ℹ 2,403,710 more rows\n# ℹ 46 more variables: `TAXON CONCEPT ID` <chr>, `COMMON NAME` <chr>,\n#   `SCIENTIFIC NAME` <chr>, `SUBSPECIES COMMON NAME` <chr>,\n#   `SUBSPECIES SCIENTIFIC NAME` <chr>, `EXOTIC CODE` <chr>,\n#   `OBSERVATION COUNT` <chr>, `BREEDING CODE` <chr>,\n#   `BREEDING CATEGORY` <chr>, `BEHAVIOR CODE` <chr>, `AGE/SEX` <chr>,\n#   COUNTRY <chr>, `COUNTRY CODE` <chr>, STATE <chr>, `STATE CODE` <chr>, …\n\n\nprint() fonksiyonu ile verinin genel yapısını gördük. 2,403,720 gözlem (satır) ve 50 değişkene (sütun) sahip bir tibble ({tidyverse}’e özel bir data frame şekli, bence daha kullanışlı). Değişken sayısı fazla olduğu için print() fonksiyonu yeterince kullanışlı. Bu sebeple, R’a yüklediğimiz eBird veri tablosunun tüm sütunlarını ve onların yapılarını görmek için glimpse() fonksiyonunu kullanacağız. Bu fonksiyon, base R’daki str() fonksiyonuna benziyor ancak tibble veri yapısıyla kullanılırken daha sade ve kullanışlı bence. Özetle, bu fonksiyonu, print() fonksiyonunun transpoze edilmiş hâli olarak görebilirsiniz.\n\nglimpse(ebird)\n\nRows: 2,403,720\nColumns: 50\n$ `GLOBAL UNIQUE IDENTIFIER`   <chr> \"URN:CornellLabOfOrnithology:EBIRD:OBS112…\n$ `LAST EDITED DATE`           <dttm> 2021-04-15 12:59:44, 2021-04-15 12:58:56…\n$ `TAXONOMIC ORDER`            <dbl> 10043, 5625, 1361, 22215, 5787, 29239, 22…\n$ CATEGORY                     <chr> \"species\", \"species\", \"species\", \"species…\n$ `TAXON CONCEPT ID`           <chr> \"avibase-4F404CB9\", \"avibase-77845DAD\", \"…\n$ `COMMON NAME`                <chr> \"Indian Roller\", \"Siberian Crane\", \"Black…\n$ `SCIENTIFIC NAME`            <chr> \"Coracias benghalensis\", \"Leucogeranus le…\n$ `SUBSPECIES COMMON NAME`     <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ `SUBSPECIES SCIENTIFIC NAME` <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ `EXOTIC CODE`                <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ `OBSERVATION COUNT`          <chr> \"1\", \"X\", \"X\", \"1\", \"2\", \"1\", \"1\", \"1\", \"…\n$ `BREEDING CODE`              <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ `BREEDING CATEGORY`          <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ `BEHAVIOR CODE`              <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ `AGE/SEX`                    <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ COUNTRY                      <chr> \"Türkiye\", \"Türkiye\", \"Türkiye\", \"Türkiye…\n$ `COUNTRY CODE`               <chr> \"TR\", \"TR\", \"TR\", \"TR\", \"TR\", \"TR\", \"TR\",…\n$ STATE                        <chr> \"Kocaeli\", \"Ankara\", \"İstanbul\", \"İstanbu…\n$ `STATE CODE`                 <chr> \"TR-41\", \"TR-06\", \"TR-34\", \"TR-34\", \"TR-3…\n$ COUNTY                       <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ `COUNTY CODE`                <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ `IBA CODE`                   <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ `BCR CODE`                   <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ `USFWS CODE`                 <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ `ATLAS BLOCK`                <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ LOCALITY                     <chr> \"Haydarpasa-Izmit Yolu\", \"Ankara\", \"Istan…\n$ `LOCALITY ID`                <chr> \"L14466142\", \"L14465903\", \"L14465858\", \"L…\n$ `LOCALITY TYPE`              <chr> \"P\", \"P\", \"P\", \"H\", \"H\", \"H\", \"P\", \"H\", \"…\n$ LATITUDE                     <dbl> 40.78331, 39.92951, 41.00805, 40.99209, 3…\n$ LONGITUDE                    <dbl> 29.47437, 32.85443, 28.97673, 28.83948, 3…\n$ `OBSERVATION DATE`           <date> 1875-06-01, 1879-04-01, 1890-12-01, 1896…\n$ `TIME OBSERVATIONS STARTED`  <time>       NA,       NA,       NA,       NA, …\n$ `OBSERVER ID`                <chr> \"obsr1979154\", \"obsr1979154\", \"obsr197915…\n$ `SAMPLING EVENT IDENTIFIER`  <chr> \"S85596027\", \"S85594679\", \"S85597213\", \"S…\n$ `PROTOCOL TYPE`              <chr> \"Historical\", \"Historical\", \"Historical\",…\n$ `PROTOCOL CODE`              <chr> \"P62\", \"P62\", \"P62\", \"P62\", \"P62\", \"P62\",…\n$ `PROJECT CODE`               <chr> \"EBIRD\", \"EBIRD\", \"EBIRD\", \"EBIRD\", \"EBIR…\n$ `DURATION MINUTES`           <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ `EFFORT DISTANCE KM`         <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ `EFFORT AREA HA`             <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ `NUMBER OBSERVERS`           <dbl> NA, NA, NA, NA, NA, NA, NA, NA, 1, 1, 1, …\n$ `ALL SPECIES REPORTED`       <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ `GROUP IDENTIFIER`           <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ `HAS MEDIA`                  <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ APPROVED                     <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ REVIEWED                     <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ REASON                       <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ `TRIP COMMENTS`              <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ `SPECIES COMMENTS`           <chr> \"Collected (Sclator & Taylor, 1876)., Kir…\n$ ...50                        <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n\n\nBurada sütunları çok daha rahat bir şekilde görebiliyoruz. Şu an için işimize yaramayacak olan bir sürü sütun var. Bu sebeple işimize yarayacak olanları seçelim. Ardından da sadece tür kaydı olan gözlemleri seçmek için species’e göre filtreleyelim.\n\nebird_subset <- ebird |>\n  select(4, 6, 7, 11, 12, 18, 29, 30) |>  # burada indeks kullanarak sectik, sutun isimleriyle de secebiliriz\n  filter(CATEGORY == \"species\")\nebird_subset\n\n# A tibble: 2,298,920 × 8\n   CATEGORY `COMMON NAME`  `SCIENTIFIC NAME` `OBSERVATION COUNT` `BREEDING CODE`\n   <chr>    <chr>          <chr>             <chr>               <chr>          \n 1 species  Indian Roller  Coracias benghal… 1                   <NA>           \n 2 species  Siberian Crane Leucogeranus leu… X                   <NA>           \n 3 species  Black Grouse   Lyrurus tetrix    X                   <NA>           \n 4 species  White-winged … Alauda leucoptera 1                   <NA>           \n 5 species  White-tailed … Vanellus leucurus 2                   <NA>           \n 6 species  Mourning Whea… Oenanthe lugens   1                   <NA>           \n 7 species  Black Lark     Melanocorypha ye… 1                   <NA>           \n 8 species  Brant          Branta bernicla   1                   <NA>           \n 9 species  Slender-bille… Numenius tenuiro… 2                   <NA>           \n10 species  Slender-bille… Numenius tenuiro… 1                   <NA>           \n# ℹ 2,298,910 more rows\n# ℹ 3 more variables: STATE <chr>, LATITUDE <dbl>, LONGITUDE <dbl>\n\n\n\nglimpse(ebird_subset)\n\nRows: 2,298,920\nColumns: 8\n$ CATEGORY            <chr> \"species\", \"species\", \"species\", \"species\", \"speci…\n$ `COMMON NAME`       <chr> \"Indian Roller\", \"Siberian Crane\", \"Black Grouse\",…\n$ `SCIENTIFIC NAME`   <chr> \"Coracias benghalensis\", \"Leucogeranus leucogeranu…\n$ `OBSERVATION COUNT` <chr> \"1\", \"X\", \"X\", \"1\", \"2\", \"1\", \"1\", \"1\", \"2\", \"1\", …\n$ `BREEDING CODE`     <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ STATE               <chr> \"Kocaeli\", \"Ankara\", \"İstanbul\", \"İstanbul\", \"Hata…\n$ LATITUDE            <dbl> 40.78331, 39.92951, 41.00805, 40.99209, 36.35517, …\n$ LONGITUDE           <dbl> 29.47437, 32.85443, 28.97673, 28.83948, 36.31517, …\n\n\nGördüğünüz gibi verinin işimize yarayacak bir alt kümesini aldık, kalabalıktan kurtulduk.\nArtık ilk yüklediğimiz veriyi (ebird) R’dan silebiliriz. Veri, tüm TR’yi kapsadığı için 2 milyondan fazla gözlem içeriyor. Büyük veri setleri RAM’in şişmesine ve R’ın çökmesine sebep olabilir. Bu sebeple artık işimize yaramayacak olan verileri environment’ten kaldırıyoruz.\n\nrm(ebird)\n\n\n\n3. Kuş verisinin mekânsallıştırılması\nEbird verimizi yükleyip, işimize yarayacak olan alt kümesini aldıktan sonra sıra geldi verimizi mekânsallaştırmaya. Verimizi, uygun mekânsal veri tipine dönüştürüp, mekânsal analizlerde kullanılabilecek bir hâle getireceğiz. Bunun için, R’da vektör verileri işlemek için geliştirilen {sf} paketini kullanacağız.\nLat long verisini ve koordinat sistemini tanımlayarak eBird verisini sf objesine çevirdik.\n\nebird_sf <- st_as_sf(\n    ebird_subset, coords = c(\"LONGITUDE\", \"LATITUDE\"), crs = \"EPSG:4326\"\n)\nebird_sf\n\nSimple feature collection with 2298920 features and 6 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 25.78258 ymin: 34.58944 xmax: 44.78608 ymax: 42.93267\nGeodetic CRS:  WGS 84\n# A tibble: 2,298,920 × 7\n   CATEGORY `COMMON NAME`  `SCIENTIFIC NAME` `OBSERVATION COUNT` `BREEDING CODE`\n * <chr>    <chr>          <chr>             <chr>               <chr>          \n 1 species  Indian Roller  Coracias benghal… 1                   <NA>           \n 2 species  Siberian Crane Leucogeranus leu… X                   <NA>           \n 3 species  Black Grouse   Lyrurus tetrix    X                   <NA>           \n 4 species  White-winged … Alauda leucoptera 1                   <NA>           \n 5 species  White-tailed … Vanellus leucurus 2                   <NA>           \n 6 species  Mourning Whea… Oenanthe lugens   1                   <NA>           \n 7 species  Black Lark     Melanocorypha ye… 1                   <NA>           \n 8 species  Brant          Branta bernicla   1                   <NA>           \n 9 species  Slender-bille… Numenius tenuiro… 2                   <NA>           \n10 species  Slender-bille… Numenius tenuiro… 1                   <NA>           \n# ℹ 2,298,910 more rows\n# ℹ 2 more variables: STATE <chr>, geometry <POINT [°]>\n\n\nGördüğünüz gibi veri tablosuyla beraber artık geometri tipi (POINT), veri boyutu (dimension), verinin coğrafi sınırlarını belirten bounding box koordinatları ve bir CRS’e (koordinat referans sistemi) sahibiz. Bundan sonra mekânsal analizleri rahatça yapabiliriz.\nDikkat ederseniz her bir satırda, bir koordinat çiftinden oluşan koordinat verisi var. Bu, her bir satırın ve bu satırdaki tüm bilgilerin, bir geometriyle ilişkili olduğunu gösteriyor. Bu geometri de, geometri tipinde belirtildiği ya da bir koordinat çiftinin varlığından anlayabileceğimiz gibi nokta. Yani 2,298,920 tane noktamız var ve her bir nokta bir gözlemle ilişkili.\n\n\n4. TR il katmanının yüklenmesi\neBird verisini mekânsallaştırdığımıza göre, TR il sınırlarını R’a yükleyebiliriz. Ben geoBoundaries veri tabanını kullanıyorum. Siz de buradan indirebilirsiniz idari sınırlara dair verileri. Aşağıda da gördüğünüz gibi {rgeoboundaries} paketiyle tr il sınırlarına doğrudan erişebiliyoruz.\n\ntr_il <- gb_adm1(country = \"Turkey\", type = \"SSCGS\") # type = \"SSCGS\" argumaniyla basitlestirilmiş versiyonunu indiriyoruz\n\n[1] \"WARNING: geoBoundaries now provides two only types of boundaries: simplified and unsimplified.All other types are deprecated. If you selected SSCGS or SSCU it will be changed to simlified, HPSCU will be changed to usimplifed \"\n\ntr_il\n\nSimple feature collection with 81 features and 5 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 25.66545 ymin: 35.80768 xmax: 44.81766 ymax: 42.1048\nGeodetic CRS:  WGS 84\nFirst 10 features:\n        shapeName shapeISO                 shapeID shapeGroup shapeType\n1           Adana    TR-01 80719077B95172477822815        TUR      ADM1\n2        Adıyaman    TR-02 80719077B90872828599679        TUR      ADM1\n3  Afyonkarahisar    TR-03 80719077B26209284550223        TUR      ADM1\n4            Ağrı    TR-04 80719077B39003465173278        TUR      ADM1\n5          Amasya    TR-05 80719077B32583172380009        TUR      ADM1\n6         Antalya    TR-07 80719077B97476213604692        TUR      ADM1\n7          Artvin    TR-08  80719077B1602304411378        TUR      ADM1\n8           Aydın    TR-09 80719077B63739470532168        TUR      ADM1\n9       Balıkesir    TR-10 80719077B55384476443375        TUR      ADM1\n10         Ankara    TR-06 80719077B47806653651907        TUR      ADM1\n                         geometry\n1  MULTIPOLYGON (((34.91146 36...\n2  MULTIPOLYGON (((37.861 37.4...\n3  MULTIPOLYGON (((30.48061 38...\n4  MULTIPOLYGON (((43.77542 39...\n5  MULTIPOLYGON (((36.3878 40....\n6  MULTIPOLYGON (((30.40305 36...\n7  MULTIPOLYGON (((41.87016 40...\n8  MULTIPOLYGON (((27.33197 37...\n9  MULTIPOLYGON (((26.7224 39....\n10 MULTIPOLYGON (((31.96673 38...\n\n\nBase R plot() fonksiyonu ile tr_il objemizi çizelim.\n\nplot(tr_il)\n\n\n\n\nGördüğünüz gibi sf objesi için plot() fonksiyonu, tüm değişkenleri (sütunları) çiziyor. Sadece shapeName değişkenini seçip, eksenleri ve başlığı ekleyerek daha iyi bir Türkiye il sınırları haritası çizelim.\n\nplot(tr_il[, \"shapeName\"], graticule = TRUE, axes = TRUE, main = \"Türkiye Haritası\")\n\n\n\n\nHop! Çok daha iyi!\nŞimdi de {tmap} paketinin içindeki qtm() fonksiyonu ile çizelim.\n\nqtm(tr_il)\n\n\n\n\nDaha az yazarak gayet güzel bir sonuç elde ettik. Yukarıda da gördüğünüz gibi harita çizmek için farklı yöntemler mevcut. Ben genelde {ggplot2} ve {tmap} paketlerini tercih ediyorum. Tercih size kalmış.\nŞimdi, kuş verimizin, Türkiye’deki dağılımına bakalım. 2 milyondan fazla satırı olan bir verinin grafiğini çizmek muhtemelen R’ın çökmesine sebep olacaktır. Bu yüzden bu verinin de bir alt kümesini alacağız.\n\nebird_sample <- sample_n(ebird_sf, 500000)\n\nVerideki 500000 satırı rastgele seçtik. Bu satır sayısı bilgisayarınız için fazla gelebilir. 5-10b de seçebilirsiniz.\nVerimizi, bu sefer de R’ın vazgeçilmez paketi olan ggplot ile görselleştiriyoruz.\n\nggplot() +\n  geom_sf(data = tr_il, aes()) +\n  geom_sf(data = ebird_sample, aes(), size = .5)\n\n\n\n\n500000 kuş gözlem verisinin Türkiye’deki dağılımı bu şekildeymiş. Batı’da ve büyükşehirlerin yakınlarında daha çok gözlem var. Hazır bu şekilde görselleştirmişken merak ettiğim 2 türün de dağılımına bir bakalım. Tür ismine göre filtreleyip çiziyoruz.\n\nSakallı Akbaba\n\n\n\nAlbum of Abyssinian birds and mammals | Chicago :Field Museum of Natural History,1930.\n\n\n\nsakalli <- ebird_sf |> \n  filter(`SCIENTIFIC NAME` == \"Gypaetus barbatus\")\n\n\nggplot() +\n  geom_sf(data = tr_il, aes()) +\n  geom_sf(data = sakalli, aes(), size = .7)\n\n\n\n\nGördüğünüz gibi sakallı akbabanın Türkiye’deki dağılımı Köroğlu Dağları, Aladağlar, Kaçkar Dağları, Akdağ gibi dağlık alanlarda yoğunlaşıyor.\n\n\nKızıl Akbaba\n\n\n\nColoured figures of the birds of the British Islands. v.1 | London :R. H. Porter,1885-1897.\n\n\nŞimdi de kızıl akbaba için bakalım.\n\nkizil <- ebird_sf |> \n  filter(`SCIENTIFIC NAME` == \"Gyps fulvus\")\n\n\nggplot() +\n  geom_sf(data = tr_il, aes()) +\n  geom_sf(data = kizil, aes(), size = .7)\n\n\n\n\nKızıl akbaba dağılımının, üreme ve göç bölgelerinde yoğunlaşan bir örüntü sergilediğini görebiliyoruz.\nBu arada aynı haritayı {tmap} paketi ile aşağıdaki gibi çizebiliriz.\n\ntm_shape(tr_il) +\n  tm_polygons() +\n  tm_shape(kizil) +\n  tm_dots()\n\n\n\n\n\n\n\n5. Kuş verisinin gruplanıp özetlenmesi\nBiraz oyalanmanın ardından tekrardan sorumuza odaklanabiliriz. Öncelikle Türkiye’deki kuş türlerini ve her türden kaç adet kayıt olduğunu görmek için kuş verisini tür ismine göre grupluyor, ardından kayıt sayısına göre özetliyoruz. Bu işlem biraz uzun sürebilir.\n\nebird_grouped <- ebird_sf |>\n  group_by(`SCIENTIFIC NAME`) |>\n  summarise(n = n())\nprint(ebird_grouped)\n\nSimple feature collection with 503 features and 2 fields\nGeometry type: GEOMETRY\nDimension:     XY\nBounding box:  xmin: 25.78258 ymin: 34.58944 xmax: 44.78608 ymax: 42.93267\nGeodetic CRS:  WGS 84\n# A tibble: 503 × 3\n   `SCIENTIFIC NAME`             n                                      geometry\n   <chr>                     <int>                                <GEOMETRY [°]>\n 1 Acanthis flammea              1                     POINT (32.87976 39.96636)\n 2 Accipiter badius              3 MULTIPOINT ((41.23051 37.10523), (39.85856 4…\n 3 Accipiter brevipes         2157 MULTIPOINT ((26.218 40.00467), (26.20626 40.…\n 4 Accipiter gentilis         1617 MULTIPOINT ((26.16617 39.819), (26.20626 40.…\n 5 Accipiter nisus           17281 MULTIPOINT ((26.01417 39.80894), (25.89106 4…\n 6 Acridotheres tristis        792 MULTIPOINT ((28.56435 41.1764), (28.61338 40…\n 7 Acrocephalus agricola       355 MULTIPOINT ((42.41 38.7), (42.42388 38.70286…\n 8 Acrocephalus arundinaceus  6899 MULTIPOINT ((25.89106 40.15504), (26.16617 3…\n 9 Acrocephalus dumetorum       25 MULTIPOINT ((35.95475 36.06548), (39.72347 4…\n10 Acrocephalus griseldis        1                       POINT (43.578 40.11865)\n# ℹ 493 more rows\n\n\n\nglimpse(ebird_grouped)\n\nRows: 503\nColumns: 3\n$ `SCIENTIFIC NAME` <chr> \"Acanthis flammea\", \"Accipiter badius\", \"Accipiter b…\n$ n                 <int> 1, 3, 2157, 1617, 17281, 792, 355, 6899, 25, 1, 2164…\n$ geometry          <GEOMETRY [°]> POINT (32.87976 39.96636), MULTIPOINT ((41.…\n\n\neBird veri tabanında Türkiye’den kayıtlı 503 tür varmış. eBird’ün internet sitesinde 494 adet tür gösteriyor ancak veri talebiyle aldığımız veri de 9 fazla tür var. Sebebi nedir bilmiyorum doğrusu. Aklıma, kesin olmayan bazı kayıtların da olabileceği geliyor sadece. Bilenler açıklarsa süper olur.\n\n\n6. Her bir il sınırı içinde kalan tür sayısının hesaplanması\nŞimdi, Türkiye’deki her bir ilin poligonu içerisindeki noktaları sayacağız. Bu da bize her bir ildeki toplam tür sayısını verecek. Öncelikle st_intersects() fonksiyonu ile her bir il ile kesişen noktaları belirliyoruz. Ardından lengths() fonksiyonu ile her bir ilde kaç adet nokta olduğunu hesaplıyoruz ve bunu, tr_il verisine yeni bir sütun olarak ekliyoruz. Temelde çok basit bir işlem ama başta anlamak zor olabiliyor.\n\ntr_il$bird_count <- lengths(st_intersects(tr_il, ebird_grouped))\n\n\n\n7. Verinin görselleştirilmesi\nŞimdi, hızlıca bir plotlayalım. Bunun için plot() fonksiyonunu kullacağız. tr_il içindeki bird_count sütununu seçelim.\n\nplot(tr_il[, \"bird_count\"])\n\n\n\n\nHaritamız hazır. Şimdi daha iyi bir görselleştirme için ggplot() fonksiyonunu kullanalım.\nÖncelikle kırılımlarımız belirleyelim ki haritamız daha güzel görünsün. Bunun için jenks optimizasyonunu kullanacağız.\n\nbreaks <-\n  classInt::classIntervals(tr_il$bird_count,\n                           n = 7,\n                           style = \"jenks\")\n\n\nggplot() +\n  geom_sf(data = tr_il,\n          aes(fill = bird_count),\n          colour = \"grey12\",\n          linewidth = .1) +\n  scale_fill_viridis_c(breaks = breaks$brks) +\n  guides(fill = guide_colorsteps(\n    barwidth = 20,\n    barheight = .5,\n    title.position = \"right\"\n  )) +\n  labs(\n    title = \"İllere Göre Kuş Türü Sayısı\",\n    x = \"Boylam\",\n    y = \"Enlem\"\n  ) +\n  theme_bw() +\n  theme(\n    legend.position = \"bottom\",\n    plot.background = element_rect(\"white\", colour = \"white\"),\n    text = element_text(family = \"Ubuntu Mono\"),\n    legend.title = element_blank()\n  )\n\n\n\n\nGördüğünüz gibi çok daha iyi bir görselleştirme oldu.\nBurada dikkat etmemiz gereken en önemli şeylerden birisi, verilerin, gözlem sayısı ve il yüzölçümü farklılıklarından dolayı yanlı (bias) olduğu. Bu harita genel fikirler verebilir ancak net çıkarımlar için verinin standartlaştırılması önem arz etmektedir.\nİkinci yazıda görüşmek dileğiyle.\nBilimle ve huzurla kalınız."
  },
  {
    "objectID": "posts/ebird_R/ebird_r.html#türkiyede-illere-göre-toplam-kuş-türü-sayısı-nasıl-bir-dağılım-gösteriyor",
    "href": "posts/ebird_R/ebird_r.html#türkiyede-illere-göre-toplam-kuş-türü-sayısı-nasıl-bir-dağılım-gösteriyor",
    "title": "R ve Kuşlar - Ebird Verilerinin R ile Analizi I",
    "section": "1. Türkiye’de, illere göre toplam kuş türü sayısı nasıl bir dağılım gösteriyor?",
    "text": "1. Türkiye’de, illere göre toplam kuş türü sayısı nasıl bir dağılım gösteriyor?\nBu soruya cevap verebilmek için öncelikle iki temel veriye ihtiyacımız var. Bunlardan birisi kuş, diğeri ise Türkiye’deki iller. Eğer elimizdeki kuş verisinde her bir tür için kaydedildiği il bilgisi varsa, illere göre kuş türlerini gruplayıp, kuş türü sayısını bulacak şekilde özetleyebiliriz. Bu, aşina olanlar için, Excel’deki pivot table’a benziyor. Ancak bu yöntemle mekânsal bir veri elde edemeyiz. Bu işlemin ardından kuş verisinin, Türkiye illeri katmanına, il isimlerine göre bağlanması gerekir. Hâlihazırda kuşların kaydedildiği noktaların koordinatları olduğundan, mekânsal olarak işleyeceğiz. Zaten koordinata göre toplanan verilerin mekansâl olarak işlenmesi daha güvenli.\n\nYazının Akışı\nYazının genel akışı aşağıdaki gibidir:\n\nGerekli paketlerin yüklenmesi\nKuş verisinin yüklenip bu yazı için gerekli olan alt kümesinin alınması\nKuş verisinin mekânsallıştırılması\nTR il katmanının yüklenmesi\nKuş verisinin gruplanıp özetlenmesi\nHer bir il sınırı içinde kalan tür sayısının hesaplanması\nVerinin görselleştirilmesi\n\n\n\n1. Gerekli paketlerin yüklenmesi\n\n\n\n\n\n\n\n\n\nPaket\nAçıklama\n\n\n\n\ntidyverse\nÇoğunlukla veri manipülasyonu ve görselleştirme üzerine paketler içeren bir paket koleksiyonu\n\n\nsf\nSimple Features: Mekânsal vektör verileri işlemek için\n\n\nrgeoboundaries\nMülki idare sınırlarını indirmek için\n\n\ntmap\nGüzel haritalar çizmek için\n\n\n\n\n\nEğer bu paketler kurulu değilse aşağıdaki kod bloğu ile kurabilirsiniz. Bu kod bloğu, paketi R’a yüklemeye çalışacak, eğer yükleyemezse kuracaktır. Eğer kurulumda sıkıntı yaşarsanız paketlerin dökümantasyonuna bakabilirsiniz.\n\nif (!require(\"tidyverse\")) install.packages(\"tidyverse\")\nif (!require(\"sf\")) install.packages(\"sf\")\nif (!require(\"rgeoboundaries\")) install.packages(\"rgeoboundaries\")\nif (!require(\"tmap\")) install.packages(\"tmap\")\n\nEğer paketler kuruluysa library() fonksiyonu ile yükleyebiliriz.\n\nlibrary(tidyverse) # bircok veri isini kolaylastirmak icin\nlibrary(sf) # r'da mekansal vektor verileri islemek icin\nlibrary(rgeoboundaries) # tr il sinirlarina erismek icin\nlibrary(tmap) # guzel haritalar cizmek icin \n\nKuş verisi olarak, Türkiye ve dünyadaki en kapsamlı kuş gözlem veri tabanı olan eBird’ü kullanacağız. eBird, dünyadaki en büyük kuş veri tabanı. Kuş gözlemcileri araziye çıktıklarında gözlemledikleri kuşları bu veri tabanına kaydediyor, bilime ve doğa korumaya katkı sağlayabiliyorlar. 2015 yılında ulusal veri tabanımız Kuşbank’ın eBird’e taşınmasından beri Türkiye kuşlarını konu alan en kapsamlı veri tabanı aynı zamanda.\neBird verilerini siteye üye olup, en altta, Bilim başlığı altındaki Veri indirme talebi sayfasından ya da {rebird} paketini kullanarak indirebilirsiniz. Ben, site üzerinden tüm Türkiye verilerini talep ederek indirdim.\n\n\n2. Kuş verisinin yüklenip bu yazı için gerekli olan alt kümesinin alınması\nİndirdiğimiz eBird verilerini R’a yükleyelim. eBird verileri txt dosyası olduğundan {tidyverse} paket evreni içindeki bir fonksiyon olan read_delim()’i kullandık. Base R’daki read.table() fonksiyonu da kullanılabilir. Veri biraz büyük olduğundan yüklenmesi ve işlenmesi yavaş olabilir.\n\nebird <- read_delim(\"./ebird/ebd_TR_relApr-2023.txt\")\n\n\nprint(ebird)\n\n# A tibble: 2,403,720 × 50\n   `GLOBAL UNIQUE IDENTIFIER`     `LAST EDITED DATE`  `TAXONOMIC ORDER` CATEGORY\n   <chr>                          <dttm>                          <dbl> <chr>   \n 1 URN:CornellLabOfOrnithology:E… 2021-04-15 12:59:44             10043 species \n 2 URN:CornellLabOfOrnithology:E… 2021-04-15 12:58:56              5625 species \n 3 URN:CornellLabOfOrnithology:E… 2021-04-15 13:04:32              1361 species \n 4 URN:CornellLabOfOrnithology:E… 2021-04-14 00:03:13             22215 species \n 5 URN:CornellLabOfOrnithology:E… 2021-04-05 11:01:32              5787 species \n 6 URN:CornellLabOfOrnithology:E… 2021-04-21 02:26:13             29239 species \n 7 URN:CornellLabOfOrnithology:E… 2021-04-14 00:03:35             22156 species \n 8 URN:CornellLabOfOrnithology:E… 2021-04-05 11:01:32               291 species \n 9 URN:CornellLabOfOrnithology:E… 2018-09-20 02:46:53              5945 species \n10 URN:CornellLabOfOrnithology:E… 2018-09-20 02:46:53              5945 species \n# ℹ 2,403,710 more rows\n# ℹ 46 more variables: `TAXON CONCEPT ID` <chr>, `COMMON NAME` <chr>,\n#   `SCIENTIFIC NAME` <chr>, `SUBSPECIES COMMON NAME` <chr>,\n#   `SUBSPECIES SCIENTIFIC NAME` <chr>, `EXOTIC CODE` <chr>,\n#   `OBSERVATION COUNT` <chr>, `BREEDING CODE` <chr>,\n#   `BREEDING CATEGORY` <chr>, `BEHAVIOR CODE` <chr>, `AGE/SEX` <chr>,\n#   COUNTRY <chr>, `COUNTRY CODE` <chr>, STATE <chr>, `STATE CODE` <chr>, …\n\n\nprint() fonksiyonu ile verinin genel yapısını gördük. 2,403,720 gözlem (satır) ve 50 değişkene (sütun) sahip bir tibble ({tidyverse}’e özel bir data frame şekli, bence daha kullanışlı). Değişken sayısı fazla olduğu için print() fonksiyonu yeterince kullanışlı. Bu sebeple, R’a yüklediğimiz eBird veri tablosunun tüm sütunlarını ve onların yapılarını görmek için glimpse() fonksiyonunu kullanacağız. Bu fonksiyon, base R’daki str() fonksiyonuna benziyor ancak tibble veri yapısıyla kullanılırken daha sade ve kullanışlı bence. Özetle, bu fonksiyonu, print() fonksiyonunun transpoze edilmiş hâli olarak görebilirsiniz.\n\nglimpse(ebird)\n\nRows: 2,403,720\nColumns: 50\n$ `GLOBAL UNIQUE IDENTIFIER`   <chr> \"URN:CornellLabOfOrnithology:EBIRD:OBS112…\n$ `LAST EDITED DATE`           <dttm> 2021-04-15 12:59:44, 2021-04-15 12:58:56…\n$ `TAXONOMIC ORDER`            <dbl> 10043, 5625, 1361, 22215, 5787, 29239, 22…\n$ CATEGORY                     <chr> \"species\", \"species\", \"species\", \"species…\n$ `TAXON CONCEPT ID`           <chr> \"avibase-4F404CB9\", \"avibase-77845DAD\", \"…\n$ `COMMON NAME`                <chr> \"Indian Roller\", \"Siberian Crane\", \"Black…\n$ `SCIENTIFIC NAME`            <chr> \"Coracias benghalensis\", \"Leucogeranus le…\n$ `SUBSPECIES COMMON NAME`     <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ `SUBSPECIES SCIENTIFIC NAME` <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ `EXOTIC CODE`                <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ `OBSERVATION COUNT`          <chr> \"1\", \"X\", \"X\", \"1\", \"2\", \"1\", \"1\", \"1\", \"…\n$ `BREEDING CODE`              <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ `BREEDING CATEGORY`          <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ `BEHAVIOR CODE`              <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ `AGE/SEX`                    <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ COUNTRY                      <chr> \"Türkiye\", \"Türkiye\", \"Türkiye\", \"Türkiye…\n$ `COUNTRY CODE`               <chr> \"TR\", \"TR\", \"TR\", \"TR\", \"TR\", \"TR\", \"TR\",…\n$ STATE                        <chr> \"Kocaeli\", \"Ankara\", \"İstanbul\", \"İstanbu…\n$ `STATE CODE`                 <chr> \"TR-41\", \"TR-06\", \"TR-34\", \"TR-34\", \"TR-3…\n$ COUNTY                       <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ `COUNTY CODE`                <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ `IBA CODE`                   <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ `BCR CODE`                   <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ `USFWS CODE`                 <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ `ATLAS BLOCK`                <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ LOCALITY                     <chr> \"Haydarpasa-Izmit Yolu\", \"Ankara\", \"Istan…\n$ `LOCALITY ID`                <chr> \"L14466142\", \"L14465903\", \"L14465858\", \"L…\n$ `LOCALITY TYPE`              <chr> \"P\", \"P\", \"P\", \"H\", \"H\", \"H\", \"P\", \"H\", \"…\n$ LATITUDE                     <dbl> 40.78331, 39.92951, 41.00805, 40.99209, 3…\n$ LONGITUDE                    <dbl> 29.47437, 32.85443, 28.97673, 28.83948, 3…\n$ `OBSERVATION DATE`           <date> 1875-06-01, 1879-04-01, 1890-12-01, 1896…\n$ `TIME OBSERVATIONS STARTED`  <time>       NA,       NA,       NA,       NA, …\n$ `OBSERVER ID`                <chr> \"obsr1979154\", \"obsr1979154\", \"obsr197915…\n$ `SAMPLING EVENT IDENTIFIER`  <chr> \"S85596027\", \"S85594679\", \"S85597213\", \"S…\n$ `PROTOCOL TYPE`              <chr> \"Historical\", \"Historical\", \"Historical\",…\n$ `PROTOCOL CODE`              <chr> \"P62\", \"P62\", \"P62\", \"P62\", \"P62\", \"P62\",…\n$ `PROJECT CODE`               <chr> \"EBIRD\", \"EBIRD\", \"EBIRD\", \"EBIRD\", \"EBIR…\n$ `DURATION MINUTES`           <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ `EFFORT DISTANCE KM`         <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ `EFFORT AREA HA`             <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ `NUMBER OBSERVERS`           <dbl> NA, NA, NA, NA, NA, NA, NA, NA, 1, 1, 1, …\n$ `ALL SPECIES REPORTED`       <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ `GROUP IDENTIFIER`           <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ `HAS MEDIA`                  <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ APPROVED                     <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ REVIEWED                     <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ REASON                       <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ `TRIP COMMENTS`              <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ `SPECIES COMMENTS`           <chr> \"Collected (Sclator & Taylor, 1876)., Kir…\n$ ...50                        <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n\n\nBurada sütunları çok daha rahat bir şekilde görebiliyoruz. Şu an için işimize yaramayacak olan bir sürü sütun var. Bu sebeple işimize yarayacak olanları seçelim. Ardından da sadece tür kategorisindeki gözlemleri seçmek için species’e göre filtreleyelim.\n\nebird_subset <- ebird |>\n  select(4, 6, 7, 11, 12, 18, 29, 30) |>  # burada indeks kullanarak sectik, sutun isimleriyle de secebiliriz\n  filter(CATEGORY == \"species\")\nebird_subset\n\n# A tibble: 2,298,920 × 8\n   CATEGORY `COMMON NAME`  `SCIENTIFIC NAME` `OBSERVATION COUNT` `BREEDING CODE`\n   <chr>    <chr>          <chr>             <chr>               <chr>          \n 1 species  Indian Roller  Coracias benghal… 1                   <NA>           \n 2 species  Siberian Crane Leucogeranus leu… X                   <NA>           \n 3 species  Black Grouse   Lyrurus tetrix    X                   <NA>           \n 4 species  White-winged … Alauda leucoptera 1                   <NA>           \n 5 species  White-tailed … Vanellus leucurus 2                   <NA>           \n 6 species  Mourning Whea… Oenanthe lugens   1                   <NA>           \n 7 species  Black Lark     Melanocorypha ye… 1                   <NA>           \n 8 species  Brant          Branta bernicla   1                   <NA>           \n 9 species  Slender-bille… Numenius tenuiro… 2                   <NA>           \n10 species  Slender-bille… Numenius tenuiro… 1                   <NA>           \n# ℹ 2,298,910 more rows\n# ℹ 3 more variables: STATE <chr>, LATITUDE <dbl>, LONGITUDE <dbl>\n\n\n\nglimpse(ebird_subset)\n\nRows: 2,298,920\nColumns: 8\n$ CATEGORY            <chr> \"species\", \"species\", \"species\", \"species\", \"speci…\n$ `COMMON NAME`       <chr> \"Indian Roller\", \"Siberian Crane\", \"Black Grouse\",…\n$ `SCIENTIFIC NAME`   <chr> \"Coracias benghalensis\", \"Leucogeranus leucogeranu…\n$ `OBSERVATION COUNT` <chr> \"1\", \"X\", \"X\", \"1\", \"2\", \"1\", \"1\", \"1\", \"2\", \"1\", …\n$ `BREEDING CODE`     <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ STATE               <chr> \"Kocaeli\", \"Ankara\", \"İstanbul\", \"İstanbul\", \"Hata…\n$ LATITUDE            <dbl> 40.78331, 39.92951, 41.00805, 40.99209, 36.35517, …\n$ LONGITUDE           <dbl> 29.47437, 32.85443, 28.97673, 28.83948, 36.31517, …\n\n\nGördüğünüz gibi verinin işimize yarayacak bir alt kümesini aldık.\nArtık ilk yüklediğimiz veriyi (ebird) R’dan silebiliriz. Veri, tüm TR’yi kapsadığı için 2 milyondan fazla gözlem içeriyor. Büyük veri setleri RAM’in şişmesine ve R’ın çökmesine sebep olabilir. Bu sebeple artık işimize yaramayacak olan verileri environment’ten kaldırıyoruz.\n\nrm(ebird)\n\n\n\n3. Kuş verisinin mekânsallıştırılması\nEbird verimizi yükleyip, işimize yarayacak olan alt kümesini aldıktan sonra sıra geldi verimizi mekânsallaştırmaya. Verimizi, uygun mekânsal veri tipine dönüştürüp, mekânsal analizlerde kullanılabilecek bir hâle getireceğiz. Bunun için, R’da vektör verileri işlemek için geliştirilen {sf} paketini kullanacağız.\nLat long verisini ve koordinat sistemini tanımlayarak Ebird verisini sf objesine çevirdik.\n\nebird_sf <- st_as_sf(\n    ebird_subset, coords = c(\"LONGITUDE\", \"LATITUDE\"), crs = \"EPSG:4326\"\n)\nebird_sf\n\nSimple feature collection with 2298920 features and 6 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 25.78258 ymin: 34.58944 xmax: 44.78608 ymax: 42.93267\nGeodetic CRS:  WGS 84\n# A tibble: 2,298,920 × 7\n   CATEGORY `COMMON NAME`  `SCIENTIFIC NAME` `OBSERVATION COUNT` `BREEDING CODE`\n * <chr>    <chr>          <chr>             <chr>               <chr>          \n 1 species  Indian Roller  Coracias benghal… 1                   <NA>           \n 2 species  Siberian Crane Leucogeranus leu… X                   <NA>           \n 3 species  Black Grouse   Lyrurus tetrix    X                   <NA>           \n 4 species  White-winged … Alauda leucoptera 1                   <NA>           \n 5 species  White-tailed … Vanellus leucurus 2                   <NA>           \n 6 species  Mourning Whea… Oenanthe lugens   1                   <NA>           \n 7 species  Black Lark     Melanocorypha ye… 1                   <NA>           \n 8 species  Brant          Branta bernicla   1                   <NA>           \n 9 species  Slender-bille… Numenius tenuiro… 2                   <NA>           \n10 species  Slender-bille… Numenius tenuiro… 1                   <NA>           \n# ℹ 2,298,910 more rows\n# ℹ 2 more variables: STATE <chr>, geometry <POINT [°]>\n\n\nGördüğünüz gibi veri tablosuyla beraber artık geometri tipi (POINT), veri boyutu (dimension), verinin coğrafi sınırlarını belirten bounding box koordinatları ve bir CRS’e (koordinat referans sistemi) sahibiz. Bundan sonra mekânsal analizleri rahatça yapabiliriz.\nDikkat ederseniz her bir satırda, bir koordinat çiftinden oluşan koordinat verisi var. Bu, her bir satırın ve bu satırdaki tüm bilgilerin, bir geometriyle ilişkili olduğunu gösteriyor. Bu geometri de, gemoetri tipinde belirtildiği ya da bir koordinat çiftinin varlığından anlayabileceğimiz gibi nokta. Yani 2,298,920 tane noktamız var ve her bir nokta bir gözlemle ilişkili.\n\n\n4. TR il katmanının yüklenmesi\neBird verisini mekânsallaştırdığımıza göre, TR il sınırlarını R’a yükleyebiliriz. Ben geoBoundaries veri tabanını kullanıyorum. Siz de buradan indirebilirsiniz idari sınırlara dair verileri. Aşağıda da gördüğünüz gibi {rgeoboundaries} paketiyle tr il sınırlarına doğrudan erişebiliyoruz.\n\ntr_il <- gb_adm1(country = \"Turkey\", type = \"SSCGS\") # type = \"SSCGS\" argumaniyla basitlestirilmiş versiyonunu indiriyoruz\n\n[1] \"WARNING: geoBoundaries now provides two only types of boundaries: simplified and unsimplified.All other types are deprecated. If you selected SSCGS or SSCU it will be changed to simlified, HPSCU will be changed to usimplifed \"\n\ntr_il\n\nSimple feature collection with 81 features and 5 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 25.66545 ymin: 35.80768 xmax: 44.81766 ymax: 42.1048\nGeodetic CRS:  WGS 84\nFirst 10 features:\n        shapeName shapeISO                 shapeID shapeGroup shapeType\n1           Adana    TR-01 80719077B95172477822815        TUR      ADM1\n2        Adıyaman    TR-02 80719077B90872828599679        TUR      ADM1\n3  Afyonkarahisar    TR-03 80719077B26209284550223        TUR      ADM1\n4            Ağrı    TR-04 80719077B39003465173278        TUR      ADM1\n5          Amasya    TR-05 80719077B32583172380009        TUR      ADM1\n6         Antalya    TR-07 80719077B97476213604692        TUR      ADM1\n7          Artvin    TR-08  80719077B1602304411378        TUR      ADM1\n8           Aydın    TR-09 80719077B63739470532168        TUR      ADM1\n9       Balıkesir    TR-10 80719077B55384476443375        TUR      ADM1\n10         Ankara    TR-06 80719077B47806653651907        TUR      ADM1\n                         geometry\n1  MULTIPOLYGON (((34.91146 36...\n2  MULTIPOLYGON (((37.861 37.4...\n3  MULTIPOLYGON (((30.48061 38...\n4  MULTIPOLYGON (((43.77542 39...\n5  MULTIPOLYGON (((36.3878 40....\n6  MULTIPOLYGON (((30.40305 36...\n7  MULTIPOLYGON (((41.87016 40...\n8  MULTIPOLYGON (((27.33197 37...\n9  MULTIPOLYGON (((26.7224 39....\n10 MULTIPOLYGON (((31.96673 38...\n\n\nBase R plot fonksiyonu ile tr_il objemizi çizelim.\n\nplot(tr_il)\n\n\n\n\nGördüğünüz gibi sf objesi için plot() fonksiyonu, tüm değişkenleri çiziyor. Sadece shapeName değişkenini seçip, eksenleri ve başlığı ekleyerek daha iyi bir Türkiye il sınırları haritası çizelim.\n\nplot(tr_il[, \"shapeName\"], graticule = TRUE, axes = TRUE, main = \"Türkiye Haritası\")\n\n\n\n\nHop! Çok daha iyi!\nŞimdi de {tmap} paketinin içindeki qtm() fonksiyonu ile çizelim.\n\nqtm(tr_il)\n\n\n\n\nDaha az yazarak gayet güzel bir sonuç elde ettik. Yukarıda da gördüğünüz gibi harita çizmek için farklı yöntemler mevcut. Ben genelde {ggplot2} ve {tmap} paketlerini tercih ediyorum. Tercih size kalmış.\nŞimdi, kuş verimizin, Türkiye’deki dağılımına bakalım. 2 milyondan fazla satırı olan bir verinin grafiğini çizmek muhtemelen R’ın çökmesine sebep olacaktır. Bu yüzden bu verinin de bir alt kümesini alacağız.\n\nebird_sample <- sample_n(ebird_sf, 500000)\n\nVerideki 500000 satırı rastgele seçtik. Bu satır sayısı bilgisayarınız için fazla gelebilir. 5-10b de seçebilirsiniz.\nVerimizi, bu sefer de R’ın vazgeçilmez paketi olan ggplot ile görselleştiriyoruz.\n\nggplot() +\n  geom_sf(data = tr_il, aes()) +\n  geom_sf(data = ebird_sample, aes(), size = .5)\n\n\n\n\n500000 kuş gözlem verisinin Türkiye’deki dağılımı bu şekildeymiş. Batı’da ve büyükşehirlerin yakınlarında daha çok gözlem var. Hazır bu şekilde görselleştirmişken merak ettiğim 2 türün de dağılımına bir bakalım. Tür ismine göre filtreleyip çiziyoruz.\n\nSakallı Akbaba\n\n\nsakalli <- ebird_sf |> \n  filter(`SCIENTIFIC NAME` == \"Gypaetus barbatus\")\n\n\nggplot() +\n  geom_sf(data = tr_il, aes()) +\n  geom_sf(data = sakalli, aes(), size = .7)\n\n\n\n\nGördüğünüz gibi sakallı akbabanın Türkiye’deki dağılımı Köroğlu Dağları, Aladağlar, Kaçkar Dağları, Akdağ gibi dağlık alanlarda yoğunlaşıyor.\nBir de kızıl akbaba için bakalım.\n\nkizil <- ebird_sf |> \n  filter(`SCIENTIFIC NAME` == \"Gyps fulvus\")\n\n\nggplot() +\n  geom_sf(data = tr_il, aes()) +\n  geom_sf(data = kizil, aes(), size = .7)\n\n\n\n\nKızıl akbaba dağılımının, üreme ve göç bölgelerinde yoğunlaşan bir örüntü sergilediğini görebiliyoruz.\nBu arada aynı haritayı {tmap} paketi ile aşağıdaki gibi çizebiliriz.\n\ntm_shape(tr_il) +\n  tm_polygons() +\n  tm_shape(kizil) +\n  tm_dots()\n\n\n\n\n\n\n5. Kuş verisinin gruplanıp özetlenmesi\nBiraz oyalanmanın ardından tekrardan sorumuza odaklanabiliriz. Öncelikle Türkiye’deki kuş türlerini ve her türden kaç adet kayıt olduğunu görmek için kuş verisini tür ismine göre grupluyor, ardından kayıt sayısına göre özetliyoruz. Bu işlem biraz uzun sürebilir.\n\nebird_grouped <- ebird_sf |>\n  group_by(`SCIENTIFIC NAME`) |>\n  summarise(n = n())\nprint(ebird_grouped)\n\nSimple feature collection with 503 features and 2 fields\nGeometry type: GEOMETRY\nDimension:     XY\nBounding box:  xmin: 25.78258 ymin: 34.58944 xmax: 44.78608 ymax: 42.93267\nGeodetic CRS:  WGS 84\n# A tibble: 503 × 3\n   `SCIENTIFIC NAME`             n                                      geometry\n   <chr>                     <int>                                <GEOMETRY [°]>\n 1 Acanthis flammea              1                     POINT (32.87976 39.96636)\n 2 Accipiter badius              3 MULTIPOINT ((41.23051 37.10523), (39.85856 4…\n 3 Accipiter brevipes         2157 MULTIPOINT ((26.218 40.00467), (26.20626 40.…\n 4 Accipiter gentilis         1617 MULTIPOINT ((26.16617 39.819), (26.20626 40.…\n 5 Accipiter nisus           17281 MULTIPOINT ((26.01417 39.80894), (25.89106 4…\n 6 Acridotheres tristis        792 MULTIPOINT ((28.56435 41.1764), (28.61338 40…\n 7 Acrocephalus agricola       355 MULTIPOINT ((42.41 38.7), (42.42388 38.70286…\n 8 Acrocephalus arundinaceus  6899 MULTIPOINT ((25.89106 40.15504), (26.16617 3…\n 9 Acrocephalus dumetorum       25 MULTIPOINT ((35.95475 36.06548), (39.72347 4…\n10 Acrocephalus griseldis        1                       POINT (43.578 40.11865)\n# ℹ 493 more rows\n\n\n\nglimpse(ebird_grouped)\n\nRows: 503\nColumns: 3\n$ `SCIENTIFIC NAME` <chr> \"Acanthis flammea\", \"Accipiter badius\", \"Accipiter b…\n$ n                 <int> 1, 3, 2157, 1617, 17281, 792, 355, 6899, 25, 1, 2164…\n$ geometry          <GEOMETRY [°]> POINT (32.87976 39.96636), MULTIPOINT ((41.…\n\n\neBird veri tabanında Türkiye’den kayıtlı 503 tür varmış. eBird’ün internet sitesinde 494 adet tür gösteriyor ancak veri talebiyle aldığımız veri de 9 fazla tür var. Sebebi nedir bilmiyorum doğrusu. Aklıma, kesin olmayan bazı kayıtların da olabileceği geliyor sadece. Bilenler açıklarsa süper olur.\n\n\n6. Her bir il sınırı içinde kalan tür sayısının hesaplanması\nŞimdi, Türkiye’deki her bir ilin poligonu içerisindeki noktaları sayacağız. Bu da bize her bir ildeki toplam tür sayısını verecek. Öncelikle st_intersects() fonksiyonu ile her bir il ile kesişen noktaları belirliyoruz. Ardından lengths() fonksiyonu ile her bir ilde kaç adet nokta olduğunu hesaplıyoruz ve bunu, tr_il verisine yeni bir sütun olarak ekliyoruz. Temelde çok basit bir işlem ama başta anlamak zor olabiliyor.\n\ntr_il$bird_count <- lengths(st_intersects(tr_il, ebird_grouped))\n\n\n\n7. Verinin görselleştirilmesi\nŞimdi, hızlıca bir plotlayalım. Bunun için plot() fonksiyonunu kullacağız. tr_il içindeki bird_count sütununu seçelim.\n\nplot(tr_il[, \"bird_count\"])\n\n\n\n\nHaritamız hazır. Şimdi daha iyi bir görselleştirme için ggplot() fonksiyonunu kullanalım.\nÖncelikle kırılımlarımız belirleyelim ki haritamız daha güzel görünsün. Bunun için jenks optimizasyonunu kullanacağız.\n\nbreaks <-\n  classInt::classIntervals(tr_il$bird_count,\n                           n = 7,\n                           style = \"jenks\")\n\n\nggplot() +\n  geom_sf(data = tr_il,\n          aes(fill = bird_count),\n          colour = \"grey12\",\n          linewidth = .1) +\n  scale_fill_viridis_c(breaks = breaks$brks) +\n  guides(fill = guide_colorsteps(\n    barwidth = 20,\n    barheight = .5,\n    title.position = \"right\"\n  )) +\n  labs(\n    title = \"İllere Göre Kuş Türü Sayısı\",\n    x = \"Boylam\",\n    y = \"Enlem\"\n  ) +\n  theme_bw() +\n  theme(\n    legend.position = \"bottom\",\n    plot.background = element_rect(\"white\", colour = \"white\"),\n    text = element_text(family = \"Ubuntu Mono\"),\n    legend.title = element_blank()\n  )\n\n\n\n\nGördüğünüz gibi çok daha iyi bir görselleştirme oldu.\nBurada dikkat etmemiz gereken en önemli şeylerden birisi, verilerin, gözlem sayısı ve il yüzölçümü farklılıklarından dolayı yanlı (bias) olduğu. Bu harita genel fikirler verebilir ancak net çıkarımlar için verinin standartlaştırılması önem arz etmektedir.\nİkinci yazıda görüşmek dileğiyle.\nBilimle ve huzurla kalınız."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "R Delisi",
    "section": "",
    "text": "R ve Kuşlar - Ebird Verilerinin R ile Analizi I\n\n\n\n\n\n\n\nR\n\n\ngis\n\n\nr-spatial\n\n\ncase_study\n\n\n\n\nR ile Kuş Verilerinin Analizi\n\n\n\n\n\n\nSep 27, 2023\n\n\nMehmet Göktuğ Öztürk\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "blog/ebird_R/ebird_r.html",
    "href": "blog/ebird_R/ebird_r.html",
    "title": "R ve Kuşlar - Ebird Verilerinin R ile Analizi 1",
    "section": "",
    "text": "İlk blog yazısıyla alakalı aklımda benzer bir plan vardı ancak geçtiğimiz haftalarda (yazıyı yazmamın üstünden aylar geçti :) ), yüksek lisansımı yaptığım labdaki sunumumun ardından, bu yazıyı yazmaya karar verdim. Bu blog yazısında, özetle, R’da kuş verilerini nasıl işleyeceğimize değineceğim. Kuşlara doğrudan ilginiz olmasa dahi, temel bazı mekânsal analizleri öğrenmek için faydalı bir yazı olacak.\nBurada iki temel sorumuz var:\n\nTürkiye’de, illere göre toplam kuş türü sayısı nasıl bir dağılım gösteriyor?\nBilindiği gibi Kızılcahamam, Türkiye’deki en önemli kara akbaba - Aegypius monachus popülasyonlarından birisini barındırıyor. Bu türün, Kızılcahamam ilçe sınırları içerisinde nasıl bir dağılımı vardır? Türün dağılımıyla çevresel faktörler arasındaki ilişki kabaca nasıldır?\n\nBu yazıda yalnızca birinci soruya odaklanacağız. İkinci soru için ikinci yazıyı bekleyiniz lütfen. :)"
  },
  {
    "objectID": "blog/ebird_R/ebird_r.html#türkiyede-illere-göre-toplam-kuş-türü-sayısı-nasıl-bir-dağılım-gösteriyor",
    "href": "blog/ebird_R/ebird_r.html#türkiyede-illere-göre-toplam-kuş-türü-sayısı-nasıl-bir-dağılım-gösteriyor",
    "title": "R ve Kuşlar - Ebird Verilerinin R ile Analizi 1",
    "section": "1. Türkiye’de, illere göre toplam kuş türü sayısı nasıl bir dağılım gösteriyor?",
    "text": "1. Türkiye’de, illere göre toplam kuş türü sayısı nasıl bir dağılım gösteriyor?\nBu soruya cevap verebilmek için öncelikle iki temel veriye ihtiyacımız var. Bunlardan birisi kuş, diğeri ise Türkiye’deki iller. Eğer elimizdeki kuş verisinde her bir tür için kaydedildiği il bilgisi varsa, illere göre kuş türlerini gruplayıp, kuş türü sayısını bulacak şekilde özetleyebiliriz. Bu, aşina olanlar için, Excel’deki pivot table’a benziyor. Ancak bu yöntemle mekânsal bir veri elde edemeyiz. Bu işlemin ardından kuş verisinin, Türkiye illeri katmanına, il isimlerine göre bağlanması gerekir. Hâlihazırda kuşların kaydedildiği noktaların koordinatları olduğundan, mekânsal olarak işleyeceğiz. Zaten koordinata göre toplanan verilerin mekansâl olarak işlenmesi daha güvenli.\n\nYazının Akışı\nYazının genel akışı aşağıdaki gibidir:\n\nGerekli paketlerin yüklenmesi\nKuş verisinin yüklenip bu yazı için gerekli olan alt kümesinin alınması\nKuş verisinin mekânsallıştırılması\nTR il katmanının yüklenmesi\nKuş verisinin gruplanıp özetlenmesi\nHer bir il sınırı içinde kalan tür sayısının hesaplanması\nVerinin görselleştirilmesi\n\n\n\n1. Gerekli paketlerin yüklenmesi\n\n\n\n\n\n\n\n\n\nPaket\nAçıklama\n\n\n\n\ntidyverse\nÇoğunlukla veri manipülasyonu ve görselleştirme üzerine paketler içeren bir paket koleksiyonu\n\n\nsf\nSimple Features: Mekânsal vektör verileri işlemek için\n\n\nrgeoboundaries\nMülki idare sınırlarını indirmek için\n\n\ntmap\nGüzel haritalar çizmek için\n\n\n\n\n\nEğer bu paketler kurulu değilse aşağıdaki kod bloğu ile kurabilirsiniz. Bu kod bloğu, paketi R’a yüklemeye çalışacak, eğer yükleyemezse kuracaktır. Eğer kurulumda sıkıntı yaşarsanız paketlerin dökümantasyonuna bakabilirsiniz.\n\nif (!require(\"tidyverse\")) install.packages(\"tidyverse\")\nif (!require(\"sf\")) install.packages(\"sf\")\nif (!require(\"rgeoboundaries\")) install.packages(\"rgeoboundaries\")\nif (!require(\"tmap\")) install.packages(\"tmap\")\n\nEğer paketler kuruluysa library() fonksiyonu ile yükleyebiliriz.\n\nlibrary(tidyverse) # bircok veri isini kolaylastirmak icin\nlibrary(sf) # r'da mekansal vektor verileri islemek icin\nlibrary(rgeoboundaries) # tr il sinirlarina erismek icin\nlibrary(tmap) # guzel haritalar cizmek icin \n\nKuş verisi olarak, Türkiye ve dünyadaki en kapsamlı kuş gözlem veri tabanı olan eBird’ü kullanacağız. eBird, dünyadaki en büyük kuş veri tabanı. Kuş gözlemcileri araziye çıktıklarında gözlemledikleri kuşları bu veri tabanına kaydediyor, bilime ve doğa korumaya katkı sağlayabiliyorlar. 2015 yılında ulusal veri tabanımız Kuşbank’ın eBird’e taşınmasından beri Türkiye kuşlarını konu alan en kapsamlı veri tabanı aynı zamanda.\neBird verilerini siteye üye olup, en altta, Bilim başlığı altındaki Veri indirme talebi sayfasından ya da {rebird} paketini kullanarak indirebilirsiniz. Ben, site üzerinden tüm Türkiye verilerini talep ederek indirdim.\n\n\n2. Kuş verisinin yüklenip bu yazı için gerekli olan alt kümesinin alınması\nİndirdiğimiz eBird verilerini R’a yükleyelim. eBird verileri txt dosyası olduğundan {tidyverse} paket evreni içindeki bir fonksiyon olan read_delim()’i kullandık. Base R’daki read.table() fonksiyonu da kullanılabilir. Veri biraz büyük olduğundan yüklenmesi ve işlenmesi yavaş olabilir.\n\nebird <- read_delim(\"./ebird/ebd_TR_relApr-2023.txt\")\n\n\nprint(ebird)\n\n# A tibble: 2,403,720 × 50\n   `GLOBAL UNIQUE IDENTIFIER`     `LAST EDITED DATE`  `TAXONOMIC ORDER` CATEGORY\n   <chr>                          <dttm>                          <dbl> <chr>   \n 1 URN:CornellLabOfOrnithology:E… 2021-04-15 12:59:44             10043 species \n 2 URN:CornellLabOfOrnithology:E… 2021-04-15 12:58:56              5625 species \n 3 URN:CornellLabOfOrnithology:E… 2021-04-15 13:04:32              1361 species \n 4 URN:CornellLabOfOrnithology:E… 2021-04-14 00:03:13             22215 species \n 5 URN:CornellLabOfOrnithology:E… 2021-04-05 11:01:32              5787 species \n 6 URN:CornellLabOfOrnithology:E… 2021-04-21 02:26:13             29239 species \n 7 URN:CornellLabOfOrnithology:E… 2021-04-14 00:03:35             22156 species \n 8 URN:CornellLabOfOrnithology:E… 2021-04-05 11:01:32               291 species \n 9 URN:CornellLabOfOrnithology:E… 2018-09-20 02:46:53              5945 species \n10 URN:CornellLabOfOrnithology:E… 2018-09-20 02:46:53              5945 species \n# ℹ 2,403,710 more rows\n# ℹ 46 more variables: `TAXON CONCEPT ID` <chr>, `COMMON NAME` <chr>,\n#   `SCIENTIFIC NAME` <chr>, `SUBSPECIES COMMON NAME` <chr>,\n#   `SUBSPECIES SCIENTIFIC NAME` <chr>, `EXOTIC CODE` <chr>,\n#   `OBSERVATION COUNT` <chr>, `BREEDING CODE` <chr>,\n#   `BREEDING CATEGORY` <chr>, `BEHAVIOR CODE` <chr>, `AGE/SEX` <chr>,\n#   COUNTRY <chr>, `COUNTRY CODE` <chr>, STATE <chr>, `STATE CODE` <chr>, …\n\n\nprint() fonksiyonu ile verinin genel yapısını gördük. 2,403,720 gözlem (satır) ve 50 değişkene (sütun) sahip bir tibble ({tidyverse}’e özel bir data frame şekli, bence daha kullanışlı). Değişken sayısı fazla olduğu için print() fonksiyonu yeterince kullanışlı. Bu sebeple, R’a yüklediğimiz eBird veri tablosunun tüm sütunlarını ve onların yapılarını görmek için glimpse() fonksiyonunu kullanacağız. Bu fonksiyon, base R’daki str() fonksiyonuna benziyor ancak tibble veri yapısıyla kullanılırken daha sade ve kullanışlı bence. Özetle, bu fonksiyonu, print() fonksiyonunun transpoze edilmiş hâli olarak görebilirsiniz.\n\nglimpse(ebird)\n\nRows: 2,403,720\nColumns: 50\n$ `GLOBAL UNIQUE IDENTIFIER`   <chr> \"URN:CornellLabOfOrnithology:EBIRD:OBS112…\n$ `LAST EDITED DATE`           <dttm> 2021-04-15 12:59:44, 2021-04-15 12:58:56…\n$ `TAXONOMIC ORDER`            <dbl> 10043, 5625, 1361, 22215, 5787, 29239, 22…\n$ CATEGORY                     <chr> \"species\", \"species\", \"species\", \"species…\n$ `TAXON CONCEPT ID`           <chr> \"avibase-4F404CB9\", \"avibase-77845DAD\", \"…\n$ `COMMON NAME`                <chr> \"Indian Roller\", \"Siberian Crane\", \"Black…\n$ `SCIENTIFIC NAME`            <chr> \"Coracias benghalensis\", \"Leucogeranus le…\n$ `SUBSPECIES COMMON NAME`     <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ `SUBSPECIES SCIENTIFIC NAME` <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ `EXOTIC CODE`                <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ `OBSERVATION COUNT`          <chr> \"1\", \"X\", \"X\", \"1\", \"2\", \"1\", \"1\", \"1\", \"…\n$ `BREEDING CODE`              <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ `BREEDING CATEGORY`          <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ `BEHAVIOR CODE`              <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ `AGE/SEX`                    <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ COUNTRY                      <chr> \"Türkiye\", \"Türkiye\", \"Türkiye\", \"Türkiye…\n$ `COUNTRY CODE`               <chr> \"TR\", \"TR\", \"TR\", \"TR\", \"TR\", \"TR\", \"TR\",…\n$ STATE                        <chr> \"Kocaeli\", \"Ankara\", \"İstanbul\", \"İstanbu…\n$ `STATE CODE`                 <chr> \"TR-41\", \"TR-06\", \"TR-34\", \"TR-34\", \"TR-3…\n$ COUNTY                       <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ `COUNTY CODE`                <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ `IBA CODE`                   <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ `BCR CODE`                   <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ `USFWS CODE`                 <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ `ATLAS BLOCK`                <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ LOCALITY                     <chr> \"Haydarpasa-Izmit Yolu\", \"Ankara\", \"Istan…\n$ `LOCALITY ID`                <chr> \"L14466142\", \"L14465903\", \"L14465858\", \"L…\n$ `LOCALITY TYPE`              <chr> \"P\", \"P\", \"P\", \"H\", \"H\", \"H\", \"P\", \"H\", \"…\n$ LATITUDE                     <dbl> 40.78331, 39.92951, 41.00805, 40.99209, 3…\n$ LONGITUDE                    <dbl> 29.47437, 32.85443, 28.97673, 28.83948, 3…\n$ `OBSERVATION DATE`           <date> 1875-06-01, 1879-04-01, 1890-12-01, 1896…\n$ `TIME OBSERVATIONS STARTED`  <time>       NA,       NA,       NA,       NA, …\n$ `OBSERVER ID`                <chr> \"obsr1979154\", \"obsr1979154\", \"obsr197915…\n$ `SAMPLING EVENT IDENTIFIER`  <chr> \"S85596027\", \"S85594679\", \"S85597213\", \"S…\n$ `PROTOCOL TYPE`              <chr> \"Historical\", \"Historical\", \"Historical\",…\n$ `PROTOCOL CODE`              <chr> \"P62\", \"P62\", \"P62\", \"P62\", \"P62\", \"P62\",…\n$ `PROJECT CODE`               <chr> \"EBIRD\", \"EBIRD\", \"EBIRD\", \"EBIRD\", \"EBIR…\n$ `DURATION MINUTES`           <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ `EFFORT DISTANCE KM`         <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ `EFFORT AREA HA`             <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ `NUMBER OBSERVERS`           <dbl> NA, NA, NA, NA, NA, NA, NA, NA, 1, 1, 1, …\n$ `ALL SPECIES REPORTED`       <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ `GROUP IDENTIFIER`           <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ `HAS MEDIA`                  <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ APPROVED                     <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ REVIEWED                     <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ REASON                       <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ `TRIP COMMENTS`              <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ `SPECIES COMMENTS`           <chr> \"Collected (Sclator & Taylor, 1876)., Kir…\n$ ...50                        <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n\n\nBurada sütunları çok daha rahat bir şekilde görebiliyoruz. Şu an için işimize yaramayacak olan bir sürü sütun var. Bu sebeple işimize yarayacak olanları seçelim. Ardından da sadece tür kategorisindeki gözlemleri seçmek için species’e göre filtreleyelim.\n\nebird_subset <- ebird |>\n  select(4, 6, 7, 11, 12, 18, 29, 30) |>  # burada indeks kullanarak sectik, sutun isimleriyle de secebiliriz\n  filter(CATEGORY == \"species\")\nebird_subset\n\n# A tibble: 2,298,920 × 8\n   CATEGORY `COMMON NAME`  `SCIENTIFIC NAME` `OBSERVATION COUNT` `BREEDING CODE`\n   <chr>    <chr>          <chr>             <chr>               <chr>          \n 1 species  Indian Roller  Coracias benghal… 1                   <NA>           \n 2 species  Siberian Crane Leucogeranus leu… X                   <NA>           \n 3 species  Black Grouse   Lyrurus tetrix    X                   <NA>           \n 4 species  White-winged … Alauda leucoptera 1                   <NA>           \n 5 species  White-tailed … Vanellus leucurus 2                   <NA>           \n 6 species  Mourning Whea… Oenanthe lugens   1                   <NA>           \n 7 species  Black Lark     Melanocorypha ye… 1                   <NA>           \n 8 species  Brant          Branta bernicla   1                   <NA>           \n 9 species  Slender-bille… Numenius tenuiro… 2                   <NA>           \n10 species  Slender-bille… Numenius tenuiro… 1                   <NA>           \n# ℹ 2,298,910 more rows\n# ℹ 3 more variables: STATE <chr>, LATITUDE <dbl>, LONGITUDE <dbl>\n\n\n\nglimpse(ebird_subset)\n\nRows: 2,298,920\nColumns: 8\n$ CATEGORY            <chr> \"species\", \"species\", \"species\", \"species\", \"speci…\n$ `COMMON NAME`       <chr> \"Indian Roller\", \"Siberian Crane\", \"Black Grouse\",…\n$ `SCIENTIFIC NAME`   <chr> \"Coracias benghalensis\", \"Leucogeranus leucogeranu…\n$ `OBSERVATION COUNT` <chr> \"1\", \"X\", \"X\", \"1\", \"2\", \"1\", \"1\", \"1\", \"2\", \"1\", …\n$ `BREEDING CODE`     <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ STATE               <chr> \"Kocaeli\", \"Ankara\", \"İstanbul\", \"İstanbul\", \"Hata…\n$ LATITUDE            <dbl> 40.78331, 39.92951, 41.00805, 40.99209, 36.35517, …\n$ LONGITUDE           <dbl> 29.47437, 32.85443, 28.97673, 28.83948, 36.31517, …\n\n\nGördüğünüz gibi verinin işimize yarayacak bir alt kümesini aldık.\nArtık ilk yüklediğimiz veriyi (ebird) R’dan silebiliriz. Veri, tüm TR’yi kapsadığı için 2 milyondan fazla gözlem içeriyor. Büyük veri setleri RAM’in şişmesine ve R’ın çökmesine sebep olabilir. Bu sebeple artık işimize yaramayacak olan verileri environment’ten kaldırıyoruz.\n\nrm(ebird)\n\n\n\n3. Kuş verisinin mekânsallıştırılması\nEbird verimizi yükleyip, işimize yarayacak olan alt kümesini aldıktan sonra sıra geldi verimizi mekânsallaştırmaya. Verimizi, uygun mekânsal veri tipine dönüştürüp, mekânsal analizlerde kullanılabilecek bir hâle getireceğiz. Bunun için, R’da vektör verileri işlemek için geliştirilen {sf} paketini kullanacağız.\nLat long verisini ve koordinat sistemini tanımlayarak Ebird verisini sf objesine çevirdik.\n\nebird_sf <- st_as_sf(\n    ebird_subset, coords = c(\"LONGITUDE\", \"LATITUDE\"), crs = \"EPSG:4326\"\n)\nebird_sf\n\nSimple feature collection with 2298920 features and 6 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 25.78258 ymin: 34.58944 xmax: 44.78608 ymax: 42.93267\nGeodetic CRS:  WGS 84\n# A tibble: 2,298,920 × 7\n   CATEGORY `COMMON NAME`  `SCIENTIFIC NAME` `OBSERVATION COUNT` `BREEDING CODE`\n * <chr>    <chr>          <chr>             <chr>               <chr>          \n 1 species  Indian Roller  Coracias benghal… 1                   <NA>           \n 2 species  Siberian Crane Leucogeranus leu… X                   <NA>           \n 3 species  Black Grouse   Lyrurus tetrix    X                   <NA>           \n 4 species  White-winged … Alauda leucoptera 1                   <NA>           \n 5 species  White-tailed … Vanellus leucurus 2                   <NA>           \n 6 species  Mourning Whea… Oenanthe lugens   1                   <NA>           \n 7 species  Black Lark     Melanocorypha ye… 1                   <NA>           \n 8 species  Brant          Branta bernicla   1                   <NA>           \n 9 species  Slender-bille… Numenius tenuiro… 2                   <NA>           \n10 species  Slender-bille… Numenius tenuiro… 1                   <NA>           \n# ℹ 2,298,910 more rows\n# ℹ 2 more variables: STATE <chr>, geometry <POINT [°]>\n\n\nGördüğünüz gibi veri tablosuyla beraber artık geometri tipi (POINT), veri boyutu (dimension), verinin coğrafi sınırlarını belirten bounding box koordinatları ve bir CRS’e (koordinat referans sistemi) sahibiz. Bundan sonra mekânsal analizleri rahatça yapabiliriz.\nDikkat ederseniz her bir satırda, bir koordinat çiftinden oluşan koordinat verisi var. Bu, her bir satırın ve bu satırdaki tüm bilgilerin, bir geometriyle ilişkili olduğunu gösteriyor. Bu geometri de, gemoetri tipinde belirtildiği ya da bir koordinat çiftinin varlığından anlayabileceğimiz gibi nokta. Yani 2,298,920 tane noktamız var ve her bir nokta bir gözlemle ilişkili.\n\n\n4. TR il katmanının yüklenmesi\neBird verisini mekânsallaştırdığımıza göre, TR il sınırlarını R’a yükleyebiliriz. Ben geoBoundaries veri tabanını kullanıyorum. Siz de buradan indirebilirsiniz idari sınırlara dair verileri. Aşağıda da gördüğünüz gibi {rgeoboundaries} paketiyle tr il sınırlarına doğrudan erişebiliyoruz.\n\ntr_il <- gb_adm1(country = \"Turkey\", type = \"SSCGS\") # type = \"SSCGS\" argumaniyla basitlestirilmiş versiyonunu indiriyoruz\n\n[1] \"WARNING: geoBoundaries now provides two only types of boundaries: simplified and unsimplified.All other types are deprecated. If you selected SSCGS or SSCU it will be changed to simlified, HPSCU will be changed to usimplifed \"\n\ntr_il\n\nSimple feature collection with 81 features and 5 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 25.66545 ymin: 35.80768 xmax: 44.81766 ymax: 42.1048\nGeodetic CRS:  WGS 84\nFirst 10 features:\n        shapeName shapeISO                 shapeID shapeGroup shapeType\n1           Adana    TR-01 80719077B95172477822815        TUR      ADM1\n2        Adıyaman    TR-02 80719077B90872828599679        TUR      ADM1\n3  Afyonkarahisar    TR-03 80719077B26209284550223        TUR      ADM1\n4            Ağrı    TR-04 80719077B39003465173278        TUR      ADM1\n5          Amasya    TR-05 80719077B32583172380009        TUR      ADM1\n6         Antalya    TR-07 80719077B97476213604692        TUR      ADM1\n7          Artvin    TR-08  80719077B1602304411378        TUR      ADM1\n8           Aydın    TR-09 80719077B63739470532168        TUR      ADM1\n9       Balıkesir    TR-10 80719077B55384476443375        TUR      ADM1\n10         Ankara    TR-06 80719077B47806653651907        TUR      ADM1\n                         geometry\n1  MULTIPOLYGON (((34.91146 36...\n2  MULTIPOLYGON (((37.861 37.4...\n3  MULTIPOLYGON (((30.48061 38...\n4  MULTIPOLYGON (((43.77542 39...\n5  MULTIPOLYGON (((36.3878 40....\n6  MULTIPOLYGON (((30.40305 36...\n7  MULTIPOLYGON (((41.87016 40...\n8  MULTIPOLYGON (((27.33197 37...\n9  MULTIPOLYGON (((26.7224 39....\n10 MULTIPOLYGON (((31.96673 38...\n\n\nBase R plot fonksiyonu ile tr_il objemizi çizelim.\n\nplot(tr_il)\n\n\n\n\nGördüğünüz gibi sf objesi için plot() fonksiyonu, tüm değişkenleri çiziyor. Sadece shapeName değişkenini seçip, eksenleri ve başlığı ekleyerek daha iyi bir Türkiye il sınırları haritası çizelim.\n\nplot(tr_il[, \"shapeName\"], graticule = TRUE, axes = TRUE, main = \"Türkiye Haritası\")\n\n\n\n\nHop! Çok daha iyi!\nŞimdi de {tmap} paketinin içindeki qtm() fonksiyonu ile çizelim.\n\nqtm(tr_il)\n\n\n\n\nDaha az yazarak gayet güzel bir sonuç elde ettik. Yukarıda da gördüğünüz gibi harita çizmek için farklı yöntemler mevcut. Ben genelde {ggplot2} ve {tmap} paketlerini tercih ediyorum. Tercih size kalmış.\nŞimdi, kuş verimizin, Türkiye’deki dağılımına bakalım. 2 milyondan fazla satırı olan bir verinin grafiğini çizmek muhtemelen R’ın çökmesine sebep olacaktır. Bu yüzden bu verinin de bir alt kümesini alacağız.\n\nebird_sample <- sample_n(ebird_sf, 500000)\n\nVerideki 500000 satırı rastgele seçtik. Bu satır sayısı bilgisayarınız için fazla gelebilir. 5-10b de seçebilirsiniz.\nVerimizi, bu sefer de R’ın vazgeçilmez paketi olan ggplot ile görselleştiriyoruz.\n\nggplot() +\n  geom_sf(data = tr_il, aes()) +\n  geom_sf(data = ebird_sample, aes(), size = .5)\n\n\n\n\n500000 kuş gözlem verisinin Türkiye’deki dağılımı bu şekildeymiş. Batı’da ve büyükşehirlerin yakınlarında daha çok gözlem var. Hazır bu şekilde görselleştirmişken merak ettiğim 2 türün de dağılımına bir bakalım. Tür ismine göre filtreleyip çiziyoruz.\n\nSakallı Akbaba\n\n\nsakalli <- ebird_sf |> \n  filter(`SCIENTIFIC NAME` == \"Gypaetus barbatus\")\n\n\nggplot() +\n  geom_sf(data = tr_il, aes()) +\n  geom_sf(data = sakalli, aes(), size = .7)\n\n\n\n\nGördüğünüz gibi sakallı akbabanın Türkiye’deki dağılımı Köroğlu Dağları, Aladağlar, Kaçkar Dağları, Akdağ gibi dağlık alanlarda yoğunlaşıyor.\nBir de kızıl akbaba için bakalım.\n\nkizil <- ebird_sf |> \n  filter(`SCIENTIFIC NAME` == \"Gyps fulvus\")\n\n\nggplot() +\n  geom_sf(data = tr_il, aes()) +\n  geom_sf(data = kizil, aes(), size = .7)\n\n\n\n\nKızıl akbaba dağılımının, üreme ve göç bölgelerinde yoğunlaşan bir örüntü sergilediğini görebiliyoruz.\nBu arada aynı haritayı {tmap} paketi ile aşağıdaki gibi çizebiliriz.\n\ntm_shape(tr_il) +\n  tm_polygons() +\n  tm_shape(kizil) +\n  tm_dots()\n\n\n\n\n\n\n5. Kuş verisinin gruplanıp özetlenmesi\nBiraz oyalanmanın ardından tekrardan sorumuza odaklanabiliriz. Öncelikle Türkiye’deki kuş türlerini ve her türden kaç adet kayıt olduğunu görmek için kuş verisini tür ismine göre grupluyor, ardından kayıt sayısına göre özetliyoruz. Bu işlem biraz uzun sürebilir.\n\nebird_grouped <- ebird_sf |>\n  group_by(`SCIENTIFIC NAME`) |>\n  summarise(n = n())\nprint(ebird_grouped)\n\nSimple feature collection with 503 features and 2 fields\nGeometry type: GEOMETRY\nDimension:     XY\nBounding box:  xmin: 25.78258 ymin: 34.58944 xmax: 44.78608 ymax: 42.93267\nGeodetic CRS:  WGS 84\n# A tibble: 503 × 3\n   `SCIENTIFIC NAME`             n                                      geometry\n   <chr>                     <int>                                <GEOMETRY [°]>\n 1 Acanthis flammea              1                     POINT (32.87976 39.96636)\n 2 Accipiter badius              3 MULTIPOINT ((41.23051 37.10523), (39.85856 4…\n 3 Accipiter brevipes         2157 MULTIPOINT ((26.218 40.00467), (26.20626 40.…\n 4 Accipiter gentilis         1617 MULTIPOINT ((26.16617 39.819), (26.20626 40.…\n 5 Accipiter nisus           17281 MULTIPOINT ((26.01417 39.80894), (25.89106 4…\n 6 Acridotheres tristis        792 MULTIPOINT ((28.56435 41.1764), (28.61338 40…\n 7 Acrocephalus agricola       355 MULTIPOINT ((42.41 38.7), (42.42388 38.70286…\n 8 Acrocephalus arundinaceus  6899 MULTIPOINT ((25.89106 40.15504), (26.16617 3…\n 9 Acrocephalus dumetorum       25 MULTIPOINT ((35.95475 36.06548), (39.72347 4…\n10 Acrocephalus griseldis        1                       POINT (43.578 40.11865)\n# ℹ 493 more rows\n\n\n\nglimpse(ebird_grouped)\n\nRows: 503\nColumns: 3\n$ `SCIENTIFIC NAME` <chr> \"Acanthis flammea\", \"Accipiter badius\", \"Accipiter b…\n$ n                 <int> 1, 3, 2157, 1617, 17281, 792, 355, 6899, 25, 1, 2164…\n$ geometry          <GEOMETRY [°]> POINT (32.87976 39.96636), MULTIPOINT ((41.…\n\n\neBird veri tabanında Türkiye’den kayıtlı 503 tür varmış. eBird’ün internet sitesinde 494 adet tür gösteriyor ancak veri talebiyle aldığımız veri de 9 fazla tür var. Sebebi nedir bilmiyorum doğrusu. Aklıma, kesin olmayan bazı kayıtların da olabileceği geliyor sadece. Bilenler açıklarsa süper olur.\n\n\n6. Her bir il sınırı içinde kalan tür sayısının hesaplanması\nŞimdi, Türkiye’deki her bir ilin poligonu içerisindeki noktaları sayacağız. Bu da bize her bir ildeki toplam tür sayısını verecek. Öncelikle st_intersects() fonksiyonu ile her bir il ile kesişen noktaları belirliyoruz. Ardından lengths() fonksiyonu ile her bir ilde kaç adet nokta olduğunu hesaplıyoruz ve bunu, tr_il verisine yeni bir sütun olarak ekliyoruz. Temelde çok basit bir işlem ama başta anlamak zor olabiliyor.\n\ntr_il$bird_count <- lengths(st_intersects(tr_il, ebird_grouped))\n\n\n\n7. Verinin görselleştirilmesi\nŞimdi, hızlıca bir plotlayalım. Bunun için plot() fonksiyonunu kullacağız. tr_il içindeki bird_count sütununu seçelim.\n\nplot(tr_il[, \"bird_count\"])\n\n\n\n\nHaritamız hazır. Şimdi daha iyi bir görselleştirme için ggplot() fonksiyonunu kullanalım.\nÖncelikle kırılımlarımız belirleyelim ki haritamız daha güzel görünsün. Bunun için jenks optimizasyonunu kullanacağız.\n\nbreaks <-\n  classInt::classIntervals(tr_il$bird_count,\n                           n = 7,\n                           style = \"jenks\")\n\n\nggplot() +\n  geom_sf(data = tr_il,\n          aes(fill = bird_count),\n          colour = \"grey12\",\n          linewidth = .1) +\n  scale_fill_viridis_c(breaks = breaks$brks) +\n  guides(fill = guide_colorsteps(\n    barwidth = 20,\n    barheight = .5,\n    title.position = \"right\"\n  )) +\n  labs(\n    title = \"İllere Göre Kuş Türü Sayısı\",\n    x = \"Boylam\",\n    y = \"Enlem\"\n  ) +\n  theme_bw() +\n  theme(\n    legend.position = \"bottom\",\n    plot.background = element_rect(\"white\", colour = \"white\"),\n    text = element_text(family = \"Ubuntu Mono\"),\n    legend.title = element_blank()\n  )\n\n\n\n\nGördüğünüz gibi çok daha iyi bir görselleştirme oldu.\nBurada dikkat etmemiz gereken en önemli şeylerden birisi, verilerin, gözlem sayısı ve il yüzölçümü farklılıklarından dolayı yanlı (bias) olduğu. Bu harita genel fikirler verebilir ancak net çıkarımlar için verinin standartlaştırılması önem arz etmektedir.\nİkinci yazıda görüşmek dileğiyle.\nBilimle ve huzurla kalınız."
  }
]