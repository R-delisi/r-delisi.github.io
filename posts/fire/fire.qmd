---
title: "R ile Sentinel-2 Uydu Görüntülerini İşleme - İzmir Yamanlar Yangını Vaka Çalışması"
author: "Mehmet Göktuğ Öztürk"
format: html
date: 2024-07-22
description: "R ile Orman Yangını Analizi"
categories:
  - R
  - gis
  - remote sensing
  - r-spatial
  - case_study
  - sentinel-2
---


**Merhabalar, blogun *üçüncü* yazısına hoş geldiniz.** 
**Takıldığınız ve anlamadığınız yerler olursa lütfen yorum yapmaya çekinmeyiniz.** 
**Ayrıca katkılarınızı ve eleştirilerinizi de bekliyorum. Keyifli okumalar.**

Blogdaki son yazımın üzerinden 10 ay geçti.
Bu *"kısacık"* zamana nişan, evlilik ve tezi -özellikle de tezi- sıkıştırınca başımı kaşıyacak vakit bile bulamadım.
Neyse bu yoğun dönemi atlattığıma, bir nebze olsun kafamı dinleyebildiğime göre yeni yazının vakti çoktan gelmiş demektir. 
Bu üçüncü yazıyı da blogun ikinci yazısında bahsettiğim veri kaybından dolayı kaybetmiştim. 
Arazi kullanım verileriyle alakalı olan o yazıyı daha sonra tekrardan yazarak paylaşmayı düşünüyorum.

Bu yazıda, Türkiye'de bu yıl gerçekleşen en büyük orman yangınlarından olan İzmir Yamanlar Yangınını ele alacağız.
R ile Sentinel-2 verilerini indirip işleyecek, yanan alanı ve yanan alan özelliklerini çıkartacağız. 

Önceki blog yazılarında fazlasıyla uzun yazmışım, her bir şeyi açıklamaya çalışmışım.
Bu sefer -eğer yapabilirsem- daha kısa tutmayı düşünüyorum.

## Yazının Akışı

1.  Paketlerin yüklenmesi
2.  dlşff
3.  

## 1. Paketlerin yüklenmesi

Paketleri R'a yükleyelim.
Eğer bilgisayarınızda yüklü olmayan bir paket varsa `install.packages()` fonksiyonunu kullanarak yükleyebilirsiniz.
`tidyverse`, `sf` ve `terra` paketine önceki yazılardan aşina olduğunuzu düşünüyorum.
Bu yazıda daha önce kullanmadığımız `rstac` paketini kullanacağız.
`rstac`, [STAC](https://stacspec.org/en) aracılığıyla mekân-zamansal yer gözlem verilerine erişmek için geliştirilmiş bir paket.
Platformlar ve diller arası ortak bir dil oluşturan STAC, uydu görüntüleriyle çalışan kişiler için birçok kolaylık sağlıyor.
Ne yazık ki Türkiye'de GIS ve uzaktan algılamayla ilgilenen birçok kişinin pek bilmediği bir platform.

```{r}
# paketleri R'a yukle
libs <- c(
  "tidyverse", # bircok veri isini kolaylastiran paket evreni 
  "sf", # mekansal vektor verileri islemek icin  
  "terra", # mekansal raster ve vektor verileri islemek icin, {raster}'in halefi
  "rstac", # mekan-zamansal yer gozlem verilerine (uydu goruntulerine) erisim icin 
  "rgeoboundaries"
)
sapply(libs, require, character.only = TRUE)
```

## STAC ile uydu verilerine erişme

Ayrıntılarda kaybolmadan Yamanlar yangınına ilişkin uydu görüntülerine nasıl ulaşacağımıza bir bakalım.
STAC ile ilgili ayrıntılı bilgi için R ve Python ile STAC kataloglarına erişim, sorgu ve veri indirme konusundaki Lorena Abad'ın [şu yazısına](https://loreabad6.github.io/posts/2023-10-17-stac-across-languages/) bakmanızı öneririm.
Bu yazıyı yazarken fazlasıyla yararlandım.

STAC, [şuradaki](https://stacindex.org/catalogs) kataloglardan erişebileceğiniz birçok farklı API'yi kullanarak yer gözlem verilerine ulaşma imkânı sunuyor.
Biz Amazon API'sini kullanarak Sentinel-2 verisine erişeceğiz. 
Öncelikle bu API'nin içerdiği verilere bir bakalım:

```{r}
url <- "https://earth-search.aws.element84.com/v1"
s_obj <- stac(url)
s_obj |> collections() |> get_request()
```

Gördüğünüz gibi `cop-dem`, `sentinel` ve `landsat` olmak üzere 9 öğe mevcut.
Biz atmosferik olarak düzeltilmiş olan -yani direkt kullanabileceğimiz- `sentinel-2-l2a` öğesine erişeceğiz ve ihtiyacımız olan verileri indireceğiz.

Tabi öncelikle uydu görüntüsünü indirmek istediğimiz mekânsal birimi belirlememiz gerekiyor.
Bu birim, İzmir ili olabilir ya da Sentinel-2'nin yüksek çözünürlüklü olduğunu düşündüğümüzde işimizi daha da kolaylaştıracak bir biçimde Yamanlar Dağı ve çevresi olabilir.
Bornova, Karşıyaka, Çiğli ve Menemen ilçelerini içeren karoyu (karoları) seçmek işimizi kolaylaştıracaktır.

Önceki yazılarda da olduğu gibi mülki idare sınırları için [geoBoundaries](https://www.geoboundaries.org/) verilerini kullanacağım.

```{r}
tr_ilce <- gb_adm2(country = "Turkey", type = "SSCGS") # type = "SSCGS" argumaniyla basitlestirilmiş versiyonunu indiriyoruz
roi_names <- c("Bornova", "Karşıyaka", "Çiğli", "Menemen")
roi <- tr_ilce |> filter(shapeName %in% roi_names)
roi
```

`roi` nesnesinin çıktısında da gördüğümüz gibi ilçe verisinin alt kümesini, Yamanlar Dağı'nı içeren 4 ilçeye göre başarıyla almışız. Şimdi de harita üzerinde görelim.

```{r}
mapview(roi)
```

