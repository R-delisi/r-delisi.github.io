---
title: "R ile Topografik Harita 2 - DEM Verisi İndirme ve Görselleştirme"
author: "Mehmet Göktuğ Öztürk"
format: html
date: 2025-03-10
description: "R ile Topografik Topografik Harita 2"
categories:
  - R
  - gis
  - r-spatial
  - base R
image: figs/preview.png
---

![](figs/preview.png)

**Merhabalar, blogun yeni yazısına hoş geldiniz.** 
**Takıldığınız ve anlamadığınız yerler olursa lütfen yorum yapmaya çekinmeyiniz.** 
**Ayrıca katkılarınızı ve eleştirilerinizi de bekliyorum. Keyifli okumalar.**

Geçtiğimiz hafta, üzerinden uzunca bir zaman geçtikten sonra blogun *üçüncü* yazısını yayımlamıştım.
`geodata` paketini kullanarak SRTM verisi indirmiş ve görselleştirmiştik.
SRTM, orijinal olarak 30 metre çözünürlüklü bir veri ancak `geodata` paketi bu veriyi, maksimum 30 arc second (yaklaşık 1 km) çözünürlüklü olarak sağlıyor.
Bu çözünürlük, çoğu görselleştirme ve ekolojik modelleme çalışması için oldukça yeterli, özellikle de Türkiye gibi büyük coğrafyalarda çalıştığımız zaman.
Ancak çalışmamızın konusu, amacı ya da çalışma alanının boyutuna göre, topografyayı daha iyi temsil edecek, daha yüksek çözünürlüklü verilere ihtiyaç duyabiliriz.
Jeolog arkadaşım Bahadır'ın mesajı üzerine bu yazıyı yazmaya karar verdim.
Bahadır, SRTM verisinin 30 metre çözünürlüğünün kendi çalışmaları için yeterli olmadığını, bu sebeple 12.5 metrelik Alos Palsar verisi kullanıklarını söylemişti.
Bildiğim kadarıyla Alos Palsar verilerine erişmek için bir R paketi mevcut değil.
[ASF Data Search](https://search.asf.alaska.edu) web sitesinden manuel olarak, [asf_search](https://docs.asf.alaska.edu/asf_search/basics/) Python paketi ile ya da R ile [ASF Search API](https://docs.asf.alaska.edu/api/basics/)'si ile indirebiliriz.
Ancak bu, bu yazının konusu değil.
İlerleyen zamanlarda belki değinebilirim.  
Geçtiğimiz yazının devamı niteliğindeki bu yazıda, R kullanarak yüksek çözünürlüklü SRTM verilerine nasıl erişebileceğimizi anlatacağım.
Yüksek çözünürlü veri indireceğimiz için Türkiye ölçeğinde veri indirmek ve o veriyi işlemek daha fazla zaman alacaktır.
Bu sebeple İzmir için indireceğim.

## Yazının Akışı

1.  Paketlerin yüklenmesi
2.  DEM verisinin indirilmesi
3.  Verinin görselleştirilmesi 

## 1. Paketlerin yüklenmesi

Bu yazı için 4 paket kullanacağız. 
Mekânsal vektör veriler için `sf`, raster veriler için `terra`, mülki idare sınırları için yine `rgeoboundaries` ve interaktif görselleştirme için de `mapview` paketini kullanacağız.
Bu yazıdaki yeni paketimiz [elevatr](https://cran.r-project.org/web/packages/elevatr/index.html).
DEM verilerine erişmek için oldukça pratik bir paket. 

```{r}
#| warning: false
libs <- c("sf", "terra", "elevatr", "rgeoboundaries", "mapview")
sapply(libs, require, character.only = TRUE)
```

## 2. DEM verisinin indirilmesi

`elevatr` paketini kullanarak birden fazla kaynaktan (SRTM, ALOS 3D, Amazon) veri indirmek mümkün.
Yukarıda da bahsettiğim gibi bu yazıda SRTM verisi indireceğiz.
Bunun için ilk olarak Türkiye mülki idare sınırı verisini indirelim.

```{r}
tr_il <- gb_adm1("TUR")
tr_il
```

```{r}
plot(st_geometry(tr_il))
```

Şimdi de İzmir sınırlarını çekelim.

```{r}
izm <- tr_il[tr_il$shapeName == "İzmir", ]
izm
```

```{r}
#| fig-width: 8
#| fig-height: 7

plot(st_geometry(izm))
```

Bir de interaktif olarak bakalım.

```{r}
mapview(izm)
```

`elevatr` paketi, "aws" hariç diğer kaynaklardan veri indirmek için [OpenTopography API](https://opentopography.org/)'sini kullanıyor.
Bunun için siteye üye olmalı ve API Key oluşturmalısınız.
Bu, işlem ücretsiz ve oldukça basit.
Sonrasında `set_opentopo_key()` fonksiyonunu kullanarak key'inizi girmelisiniz.
Ardından R oturumunu yeniden başlattığınızda verilere erişebilirsiniz.
Şimdi de İzmir sınırlarını kullanarak DEM verisini indirebiliriz.
Bunun için `get_elev_raster()` fonksiyonunu kullanacağız.
İzmir için veri indirmek için `locations = izm`, yüksek çözünürlüklü SRTM verisi için `src = "gl1"` ve veriyi İzmir sınırlarına göre kırpmak için de `clip = "locations"` argümanını kullanacağız.

```{r}
#| warning: false
#| output: false 
dem <- get_elev_raster(izm, src = "gl1", clip = "locations")
```

```{r}
dem
```

```{r}
#| fig-width: 8
#| fig-height: 7

plot(dem)
```

Gördüğünüz gibi veri `RasterLayer` sınıfında.
Bunun sebebi `elevatr` paketinin hâlen `raster` paketini kullanması.
Veriyi `terra`'nın `SpatRaster` sınıfına çeviriyorum. 
Ardından da bir önceki yazıdaki gibi reclassify edeceğim.
0'dan küçük olan tüm değerleri 0'a eşitleyeceğim.
Bunu `terra` paketi içindeki `classify()` fonksiyonu ile yapabiliriz.

```{r}
dem <- rast(dem)
dem <- classify(
  dem, 
  rcl = matrix(c(-Inf, 0, 0), ncol = 3, byrow = TRUE)
)
dem
```

```{r}
#| fig-width: 8
#| fig-height: 7
 
plot(dem)
```

Şimdi de görselleştirmeye geçebiliriz.

## 3. Verinin görselleştirilmesi

Veriyi görselleştirmek için yine `base R` kullanacağım.
Bu sefer daha iyi bir renk paleti seçiyor ve kuzey oku ile ölçek ekliyorum.

```{r}
#| fig-width: 8
#| fig-height: 7
 
breaks <- seq(0, 2150, 10)
plot.new()
par(family = "Monserrat", cex = 1.2)
plot(
  dem, 
  breaks = breaks,
  type = "continuous",
  col = tidyterra::hypso.colors(
    length(breaks) - 1, 
    palette = "wiki-schwarzwald-cont"
  ), 
  las = 1,
  maxcell = prod(dim(dem)),
  plg = list(
    at = seq(0, 2100, 250),
    tic = "out"
  ),
  mar = c(0.5, 1.5, 0, 4)
)
plot(st_geometry(izm), add = TRUE)
north("topleft", type = 1, label = expression(bold("KUZEY")), lwd = 1.2)
sbar(
  10, 
  "bottomleft", 
  below = "km",
  adj = c(0.5, -1),
  lonlat = TRUE
)
```

Geçenki yazıdaki histogramı şimdi de İzmir için çizelim, rakımın İzmir'deki dağılımına bir bakalım.

```{r}
#| fig-width: 8
#| fig-heigh: 5
#| warning: false
plot.new()
par(
  mar = c(5, 5.2, 1, 1),
  mgp = c(3.6, 0.7, 0),         # etiket uzakligini ayarliyoruz
  las = 1, 
  family = "Montserrat", 
  bty = "l",                  # box'ın tipini L seklinde yapmak icin
  cex.lab = 1.2,
  xpd = NA                    # etiketi grafik sinirlari disina tasimaya izin verir
)
hist(
  dem,
  xlab = "Rakım [m]",         # x ekseninin etiketi
  ylab = "Sıklık",            # y ekseninin etiketi
  main = "",                  # baslik icin. "" bos yaparak basligi cizmiyorum
  breaks = seq(0, 2150, 50),  # grafigin kirilimlari
)
axis(                         # x eksenindeki kucuk tikleri cizmek icin
  side = 1,                   # alttaki x eksenine cizmek icin
  at = seq(0, 2150, 50),      # kirilimlar
  tck = -0.030 / 4,           # tik boyutu kucuk olsun
  labels = FALSE              # etiket olmamasi icin
) 
box()                         # eksenlere kutu cizmek icin
```

Grafik, fazlasıyla sağa çarpık bir dağılım sergiliyor. 

Bir sonraki yazıda görüşürüz.

Bilimle ve huzurla kalınız!